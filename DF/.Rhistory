t
cor.test(x, y)
r*sqrt(n - 2)/sqrt(1 - r^2)
### Проверка статистичиской значимсоти коэффициента корреляции Пирсона ###
n <- 10
t = r*sqrt(n - 2)/sqrt(1 - r^2)
r*sqrt(n - 2)/sqrt(1 - r^2)
r
sqrt(n - 2)
sqrt(4)
sqrt(n - 2)
[1] 2.828427
2.828427*0.8702621
r*sqrt(n - 2)
sqrt(1 - r^2)
r*sqrt(n - 2)/sqrt(1 - r^2)
2.461473/0.492589
2.46/0.49
r*sqrt(n - 2)/sqrt(1 - r^2)
0.87 * sqrt(10 - 2)/sqrt(1 - 0.87^2)
r * sqrt(n - 2)/sqrt(1 - r^2)
0.84^2
0.11^2
- 0.28^2
-0.28^2
0.28^2
#### Exercise 1 (page 212) ####
# Некоторые исследования выявили слабую положительную связь между ростом и умственными способностями, то есть более высокие люди
# в среднем немного умнее. Использую формулы, представленные в этой главе,
# рассчитайте коэффициент корреляции Пирсона для данных представленных в таблице 7.2
# Затем проверьте корреляцию на статистическую значимость (проведите двухсторонний тест с уровнем значимости 0,05),
# рассситайте коэффициент детерминации и проанализируйте результаты
# Таблицы 7.2
student <- c(1:10)
height_inch <- c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71)
remove(ls = list())
remove(list = ls())
#### Exercise 1 (page 212) ####
# Некоторые исследования выявили слабую положительную связь между ростом и умственными способностями, то есть более высокие люди
# в среднем немного умнее. Использую формулы, представленные в этой главе,
# рассчитайте коэффициент корреляции Пирсона для данных представленных в таблице 7.2
# Затем проверьте корреляцию на статистическую значимость (проведите двухсторонний тест с уровнем значимости 0,05),
# рассситайте коэффициент детерминации и проанализируйте результаты
# Таблицы 7.2
student <- c(1:10)
height_inch <- c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71)
iq <- c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100)
table_7.2 <- data.frame(student, height_inch, iq)
View(table_7.2)
cor.test(height_inch, iq)
0.1347945 * sqrt(10 - 2)/sqrt(1 - 0.1347945^2)
# 3) Рассситайте коэффициент детерминации и проанализируйте результаты
0.1347945^2
0.1347945^2
# альтернативный способ
ssx <- sum(height_inch - mean(height_inch)
sum(height_inch - mean(height_inch)
sum(height_inch - mean(height_inch))
sum(c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71) - mean(c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71)))
sum(iq - mean(iq))
sum(c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100) - mean(c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100)))
sum((height_inch - mean(height_inch)) * (iq - mean(iq)))
sum(
(
c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71) - mean(c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71)
)
*
(
c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100) - mean(c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100))
)
)
sum(
(
c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71) - mean(c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71))
)
*
(
c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100) - mean(c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100))
)
)
sum(
(
c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71) - mean(c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71))
)
*
(
c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100) - mean(c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100))
)
)
sum((height_inch - mean(height_inch)) * (iq - mean(iq)))
ssx <- sum(height_inch - mean(height_inch))
ssx <- sum(c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71) - mean(c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71)))
ssy <- sum(iq - mean(iq))
ssy <- sum(c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100) - mean(c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100)))
ssxy <- sum((height_inch - mean(height_inch)) * (iq - mean(iq)))
ssxy <- sum(
(
c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71) - mean(c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71))
)
*
(
c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100) - mean(c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100))
)
)
r = ssxy/sqrt(ssx * ssy)
r
r <- ssxy/sqrt(ssx * ssy)
r
cor.test(height_inch, iq)
ssxy
ssx
ssy
ssy
r <- 24.5/sqrt(5.684342e-14 * 0)
r
cor.test(height_inch, iq)
ssxy
sum((height_inch - mean(height_inch)) * (iq - mean(iq)))
sum(height_inch - mean(height_inch))
sum((height_inch - mean(height_inch))^2)
sum(
(
c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71) - mean(c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71))
)^2
)
sum(
(
iq - mean(iq)
)^2
)
sum(
(
c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100) - mean(c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100))
)^2
)
# ssx
ssx <- sum(
(
height_inch - mean(height_inch)
)^2
)
ssx <- sum(
(
c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71) - mean(c(60, 62, 63, 65, 65, 67, 68, 70, 70, 71))
)^2
)
# ssy
ssy <- sum(
(
iq - mean(iq)
)^2
)
ssy <- sum(
(
c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100) - mean(c(103, 100, 98, 95, 110, 108, 104, 110, 97, 100))
)^2
)
# ssxy
ssxy <- sum((height_inch - mean(height_inch)) * (iq - mean(iq))) # 24.5
ssxy/sqrt(ssx * ssy)
r <-  ssxy/sqrt(ssx * ssy)
r
ssxy
ssx
ssy
24.5/sqrt(124.9 * 264.5)
ssxy/sqrt(ssx * ssy)
cor.test(height_inch, iq)
r * sqrt(n - 2)/sqrt(1 - r^2)
n <- 10
t <-  r * sqrt(n - 2)/sqrt(1 - r^2)
r * sqrt(n - 2)/sqrt(1 - r^2)
cor.test(height_inch, iq)
r * sqrt(n - 2)/sqrt(1 - r^2)
sum(height_inch)
sum(height_inch^2)
sum(iq)
sum(iq^2)
sum(c(height_inch, iq))
sum(c(height_inch*iq))
rm(list = ls)
rm(list = ls())
---
title: "Введение"
author: "<i>Основы программирования на R</i><br><br>Антон Антонов"
output:
revealjs::revealjs_presentation:
theme: serif
highlight: tango
center: false
transition: fade
pandoc_args: [
---
```{r setup, echo=FALSE}
options(width = 110)
```
# Что такое R
>- R -- язык программирования для научных вычислений и анализа данных с упором на визуализацию и воспроизводимость
>- R -- свободное кросс-платформенное программное обеспечение с открытым исходным кодом
>- R -- интерпретируемый язык с интерфейсом командной строки
>- R -- мультипарадигменный язык, сочетающий в себе
. . .
1. функциональное
2. процедурное
3. объектно-ориентированное
4. рефлекcивное программирование
>- R бесплатен, его код открыт
>- Огромное количество встроенных статистических тестов, математических алгоритмов, функций для анализа данных в академических и отраслевых исследованиях
>- Расширяемость: модульная система пакетов (packages)
>- Обширное сообщество разработчиков
>- Полностью программируемая высокоуровневая графика
```{r}
2 + 1
```{r, eval=FALSE}
sin(pi/6)
```{r, echo=FALSE}
sin(pi/6)
cats <- 5
dogs <- 2
pets <- cats + dogs
pets
```{r}
ls()
?rnorm
rnorm(15)
returntwo <- function() {
y <- 2
return(y)
}
returntwo()
returntwo(2)
addten <- function(x) {
x <- x + 10
}
addten(cats)
cats
addten <- function(x) {
return(x + 10)
}
morecats <- addten(cats)
morecats
addten <- function(x) {
moredogs <<- x + 10
}
addten(dogs)
dogs
moredogs
addten(dogs)
ls()
```
. . .
```{r}
rm(dogs)
rm(moredogs)
ls()
rm(list = ls())
ls()
?function
?'function'
?
?ls
?help,
?help
?'function'
?rm
addten <- function(x) {
x <- x + 10
}
cats <- 5
dogs <- 2
pets <- cats + dogs
addten <- function(x) {
x <- x + 10
}
addten(cats)
cats
addten <- function(x) {
return(x + 10)
}
addten(cats)
morecats <- addten(cats)
morecats
moredogs <<- x + 10
addten <- function(x) {
moredogs <<- x + 10
}
addten(dogs)
dogs
moredogs
rm(value)
gc()
return(x/y)
devide <- function(x, y) {
return(x/y)
}
devide(4, 2)
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
boxplot(price ~ origin, data = mydata)
library(ggplot2)
library(stringi)
mydata <- read.csv('shops.csv')
mydata2 <- read.csv('therapy_data.csv')
yt <- read.csv2("yt.csv")
setwd("/Users/zelimkhan/Desktop/Data/GitHub/DF/")
yt <- read.csv2("yt.csv")
View(yt)
boxplot(price ~ origin, data = mydata)
remove(list = ls())
mydata <- read.csv('shops.csv')
mydata2 <- read.csv('therapy_data.csv')
yt <- read.csv2("yt.csv")
boxplot(price ~ origin, data = mydata)
ggplot(mydata, aes(x = origin, y = price)) +
geom_boxplot()
fit <- aov(price ~ origin, data = mydata)
summary(fit)
model.tables(fit1,"means")
ggplot(mydata, aes(x = origin, y = price)) +
geom_boxplot()
ggplot(mydata, aes(x = origin, y = price)) +
geom_boxplot() + facet_grid(store)
ggplot(mydata, aes(x = origin, y = price)) +
geom_boxplot() + facet_grid(x = store)
facet_grid
ggplot(mydata, aes(x = origin, y = price)) +
geom_boxplot() + facet_grid(~ store)
fit1 <- aov(price ~ origin + store, data=mydata)
summary(fit1)
model.tables(fit1,"means")
# yt #
yt1 <- subset(yt, reason %in% c('План по стандартизации', 'Поручение ДЭПиР или руководства') & kind_tz == 'ТТЗ')
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
ggplot(mydata, aes(x = origin, y = price)) +
geom_boxplot() + facet_grid(~ store)
ggplot(mydata, aes(x = origin, y = price, color = store, group = store)) +
geom_boxplot()
ggplot(mydata, aes(x = origin, y = price, color = store, groupin = store)) +
geom_boxplot()
ggplot(mydata, aes(x = origin, y = price, color = origin, groupin = store)) +
geom_boxplot()
ggplot(mydata, aes(x = origin, y = price, color = store, groupin = store)) +
geom_boxplot()
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("Hmisc")
library(stringi)
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
ggplot(mydata, aes(x = food, y = price)) +
geom_boxplot()
#### Step 8 of 15  ####
# Воспользуемся встроенными данными npk, иллюстрирующими влияние применения различных удобрений на урожайность гороха (yield).
# Нашей задачей будет выяснить, существенно ли одновременное применение азота (фактор N) и фосфата (фактор P).
# Примените дисперсионный анализ, где будет проверяться влияние фактора применения азота (N),
# влияние фактора применения фосфата (P) и их взаимодействие.
# В ответе укажите p-value для взаимодействия факторов N и P.
# Десятичный разделитель - запятая!
# Pairwise comparisons
npk
#### Step 8 of 15  ####
# Воспользуемся встроенными данными npk, иллюстрирующими влияние применения различных удобрений на урожайность гороха (yield).
# Нашей задачей будет выяснить, существенно ли одновременное применение азота (фактор N) и фосфата (фактор P).
# Примените дисперсионный анализ, где будет проверяться влияние фактора применения азота (N),
# влияние фактора применения фосфата (P) и их взаимодействие.
# В ответе укажите p-value для взаимодействия факторов N и P.
# Десятичный разделитель - запятая!
# Pairwise comparisons
npk <- npk
View(npk)
#### Step 8 of 15  ####
# Воспользуемся встроенными данными npk, иллюстрирующими влияние применения различных удобрений на урожайность гороха (yield).
# Нашей задачей будет выяснить, существенно ли одновременное применение азота (фактор N) и фосфата (фактор P).
# Примените дисперсионный анализ, где будет проверяться влияние фактора применения азота (N),
# влияние фактора применения фосфата (P) и их взаимодействие.
# В ответе укажите p-value для взаимодействия факторов N и P.
# Десятичный разделитель - запятая!
# Pairwise comparisons
?npk
fit8 <- aov(yield ~ N * P, data = npk)
summary(fit8)
fit9 <- aov(yield ~ N + P + K, data = npk)
summary(fit9)
iris <- iris
fit11 <- aov(Sepal.Width ~ Species, data = iris)
summary(fit11)
View(iris)
#### Step 10 of 15  ####
ggplot(mydata, aes(x = food, y = price)) +
geom_boxplot()
fit5 <- aov(price ~ food, data=mydata)
summary(fit5)
TukeyHSD(fit5)
TukeyHSD(fit11)
ggplot(iris, aes(x = Species, y = Sepal.Width)) +
geom_boxplot()
Pillulkin.csv <- read.csv(https://stepic.org/media/attachments/lesson/11505/Pillulkin.csv)
Pillulkin.csv <- read.csv('https://stepic.org/media/attachments/lesson/11505/Pillulkin.csv')
View(Pillulkin.csv)
pillulkin <- read.csv('https://stepic.org/media/attachments/lesson/11505/Pillulkin.csv')
ls()
rm(Pillulkin.csv)
ls()
View(mydata2)
mydata2$subject <- as.factor(mydata2$subject)
pillulkin$patient <- as.factor(pillulkin$patient)
str(pillulkin)
fit2 <- aov(well_being ~ therapy*price, data = mydata2)
summary(fit2)
fit1 <- aov(well_being ~ therapy, data = mydata2)
summary(fit1)
fit1b <- aov(well_being ~ therapy + Error(subject/therapy), data = mydata2)
summary(fit1)
fit13 <- aov(temperature ~ pil + Error(patient/pill), data = Pillulkin.csv)
fit13 <- aov(temperature ~ pil + Error(patient/pill), data = pillulkin)
summary(fit13)
fit13 <- aov(temperature ~ pil + Error(patient/pill), data = pillulkin)
fit13 <- aov(temperature ~ pil + Error(patient/pil), data = pillulkin)
fit13 <- aov(temperature ~ pill + Error(patient/pill), data = pillulkin)
summary(fit13)
fit2 <- aov(well_being ~ therapy*price, data = mydata2)
summary(fit2)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot()
fit14 <- aov(temperature ~ pill * doctor + Error(patient/pill * doctor, data = pillulkin))
summary(fit14)
fit14 <- aov(temperature ~ pill * doctor + Error(patient/pill * doctor, data = pillulkin))
fit14 <- aov(temperature ~ pill * doctor + Error(patient/pill * doctor, data = pillulkin))
pillulkin
fit14 <- aov(temperature ~ pill * doctor + Error(patient/pill * doctor, data = pillulkin))
fit14 <- aov(temperature ~ pill + Error(patient/pill), data = pillulkin)
fit14 <- aov(temperature ~ pill * doctor + Error(patient/pill * doctor), data = pillulkin)
summary(fit14)
fit2b <- aov(well_being ~ therapy*price + Error(subject/(therapy*price)), data = mydata2)
summary(fit2b)
ggplot(mydata2, aes(x = price, y = well_being)) +
geom_boxplot() +
facet_grid(~subject)
fit3 <- aov(well_being ~ therapy*price*sex, data = mydata2)
summary(fit3)
fit3b <- aov(well_being ~ therapy*price*sex + Error(subject/(therapy*price)), data = mydata2)
summary(fit3b)
library(ggplot2)
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
library(hmisc)
install.packages("Hmisc")
y
yes
install.packages("Hmisc")
library(hmisc)
library(Hmisc)
library('Hmisc')
library('hmisc')
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
pd
ggplot
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
pd = position_dodge(0.1)
ggplot(mydata, aes(x = store, y = price, color = origin, group = origin)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd)+
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch=15) +
theme_bw()
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp, group = sup))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
