fish <- fisher.test(x)
print(fish$p.value)
} else {
chis <- chisq.test(x)
print(c(chis$statistic, chis$parameter, chis$p.value))
}
}
smart_test(df)
smart_test(df1)
smart_test <- function(x) {
x <- table(x)
if(any(x < 5)) {
fish <- fisher.test(x)
print(fish$p.value)
} else {
chis <- chisq.test(x)
print(c(chis$statistic, chis$parameter, chis$p.value))
}
}
smart_test(df)
table(df)
typeof(df)
class(df)
smart_test <- function(x) {
if(any(x < 5)) {
fish <- fisher.test(x)
fish$p.value
} else {
chis <- chisq.test(x)
c(chis$statistic, chis$parameter, chis$p.value)
}
}
smart_test(df)
smart_test(df1)
remove(list = ls())
smart_test(df1)
####  1.9 Practice. Exercise 3 ####
# 1
smart_test <- function(x) {
if(any(x < 5)) {
fish <- fisher.test(x)
fish$p.value
} else {
chis <- chisq.test(x)
c(chis$statistic, chis$parameter, chis$p.value)
}
}
smart_test(df)
smart_test(df1)
# Достаточно наблюдений в таблице
df <- table(mtcars[,c("am", "vs")])
# Недостаточно наблюдений в таблице
df1 <-  table(mtcars[1:20,c("am", "vs")])
smart_test(df)
smart_test(df1)
smart_test <- function(x) {
if(any(x < 5)) {
fish <- fisher.test(x)
fish$p.value
} else {
chis <- chisq.test(x)
c(chis$statistic, chis$parameter, chis$p.value)
}
}
smart_test(df)
smart_test(df1)
####  1.9 Practice. Exercise 3 ####
# 1
smart_test <- function(x, y) {
a <- table(x, y)
if(any(a < 5)) {
fish <- fisher.test(a)
fish$p.value
} else {
chis <- chisq.test(a)
c(chis$statistic, chis$parameter, chis$p.value)
}
}
smart_test(df)
unlist(x)
unlist(df)
df4 <- unlist(df)
typeof(df4)
class(df)
####  1.9 Practice. Exercise 3 ####
# 1
smart_test <- function(x) {
x <- as.table(x)
if(any(x < 5)) {
fish <- fisher.test(x)
fish$p.value
} else {
chis <- chisq.test(x)
c(chis$statistic, chis$parameter, chis$p.value)
}
}
smart_test(df)
smart_test(df1)
setwd("/Users/zelimkhan/Desktop/Data/GitHub/DF/")
yt <- read.csv2("yt.csv")
str(yt)
### 1) hist
hist(yt$duration)
View(yt)
remove(list = ls())
#### Установка пакетов ####
install.packages('ggplot2')
library(ggplot2)
install.packages('psych')
library(psych)
setwd("C:/Users/GudievZK/Desktop/GitHub/DF/")
setwd("/Users/zelimkhan/Desktop/Data/GitHub/DF/")
yt <- read.csv2("yt.csv")
# меняем тип данных
str(yt)
yt$ktd <- as.factor(yt$ktd)
yt$reason <- as.factor(yt$reason)
yt$year_plan_st <- as.factor(yt$year_plan_st)
yt$kvartal <- as.factor(yt$kvartal)
yt$kind_tz <- as.factor(yt$kind_tz)
yt$stage <- as.factor(yt$stage)
yt$executor_ac <- as.factor(yt$executor_ac)
yt$teamleader <- as.factor(yt$teamleader)
yt$deputy <- as.factor(yt$deputy)
yt$executor_depir <- as.factor(yt$executor_depir)
yt$contract <- as.factor(yt$contract)
yt$pcp <- as.factor(yt$pcp)
yt$criteria <- as.factor(yt$criteria)
yt$f2 <- as.factor(yt$f2)
yt$method <- as.factor(yt$method)
yt$tegs <- as.factor(yt$tegs)
# меняем тип данных
str(yt)
View(yt)
subset(yt_ish, tegs%in%"Не полностью YouTrackная")
subset(yt, tegs%in%"Не полностью YouTrackная")
subset(yt_ish, tegs == "Не полностью YouTrackная")
subset(yt, tegs == "Не полностью YouTrackная")
subset(yt, tegs%in%"Полностью YouTrackная")
which(names(yt) == 'duration')
which(names(yt) == 'numb_ret_depir')
which(names(yt) == 'numb_ret_oiv')
yt <- read.csv2("yt.csv")
# меняем тип данных
str(yt)
yt_f_names <- c('reason', 'year_plan_st', 'kvartal', 'stage', 'executor_ac', 'teamleader', 'deputy', 'contract',
'pcp', 'criteria', 'f2', 'method', 'tegs')
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
# меняем тип данных
str(yt)
what_duration <- as.factor(yt$what_duration)
what_numb_ret_depir <- as.factor(yt$what_numb_ret_depir)
what_numb_ret_oiv <- as.factor(yt$what_numb_ret_oiv)
top_worst_ktd <- as.factor(yt$top_worst_ktd)
remove(list = ls())
yt <- read.csv2("yt.csv")
yt_f_names <- c('reason', 'year_plan_st', 'kvartal', 'stage', 'executor_ac', 'teamleader', 'deputy', 'contract',
'pcp', 'criteria', 'f2', 'method', 'tegs', 'what_duration', 'what_numb_ret_depir', 'what_numb_ret_oiv', 'top_worst_ktd')
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
# меняем тип данных
str(yt)
write.csv2(yt, "yt.csv")
yt <- read.csv2("yt.csv")
# меняем тип данных
str(yt)
yt_f_names <- c('reason', 'year_plan_st', 'kvartal', 'stage', 'executor_ac', 'teamleader', 'deputy', 'contract',
'pcp', 'criteria', 'f2', 'method', 'tegs', 'what_duration', 'what_numb_ret_depir', 'what_numb_ret_oiv', 'top_worst_ktd')
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
# Номера столбцов
del_names <- c(
which(names(yt) == 'numb'),
which(names(yt) == 'tegs'),
which(names(yt) == 'discription'),
which(names(yt) == 'det_let_prot'),
which(names(yt) == 'executor_depir'),
which(names(yt) == 'deputy'),
which(names(yt) == 'date_rev_ac'),
which(names(yt) == 'date_rev_depir')
)
del_names
which(names(yt) == 'discription')
which(names(yt) == 'det_let_prot'
which(names(yt) == 'det_let_prot')
which(names(yt) == 'executor_depir')
rm(del_names)
yt[, -c("numb", "tegs" , "discription", "det_let_prot")]
yt[, -c("numb", "tegs")]
yt[, -c(yt$numb, yt$tegs)]
View(yt)
yt[, -c(yt$X.1, yt$X)]
View(yt)
yt <- yt[, -c(yt$X.1, yt$X)] # Не работает
View(yt)
yt <- read.csv2("yt.csv")
yt_f_names <- c('reason', 'year_plan_st', 'kvartal', 'stage', 'executor_ac', 'teamleader', 'deputy', 'contract',
'pcp', 'criteria', 'f2', 'method', 'tegs', 'what_duration', 'what_numb_ret_depir', 'what_numb_ret_oiv', 'top_worst_ktd')
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
View(yt)
yt[, -c(yt$X.1, yt$X)]
yt[, -c(yt$X.1, yt$X)]
yt[, -c(yt$X.1)]
yt[, - yt$X.1]
which(names(yt) == 'X1')
which(names(yt) == 'X.1')
subset(yt_ish, tegs%in%c("Полностью YouTrackная", ""))
subset(yt, tegs%in%c("Полностью YouTrackная", ""))
yt$X.1 <- NULL
View(yt)
yt[yt$X.1, yt$X] <- NULL
yt[, c(yt$X.1, yt$X)] <- NULL
View(yt)
yt <- read.csv2("yt.csv")
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
View(yt)
subset(yt, select = -c(X.1, X))
yt <- subset(yt, select = -c(X.1, X))
yt <- read.csv2("yt.csv")
# меняем тип данных
str(yt)
yt_f_names <- c('reason', 'year_plan_st', 'kvartal', 'stage', 'executor_ac', 'teamleader', 'deputy', 'contract',
'pcp', 'criteria', 'f2', 'method', 'tegs', 'what_duration', 'what_numb_ret_depir', 'what_numb_ret_oiv', 'top_worst_ktd')
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
str(yt)
yt$ktd[yt$tegs == "Не полностью YouTrackная"]
subset(yt, tegs%in%"Не полностью YouTrackная") # проверка %in%
subset(yt, tegs == "Не полностью YouTrackная") # проверка tegs == "Не полностью YouTrackная"
yt <- subset(yt, select = -c(X.1, X))
which(names(yt) == 'duration')
aggregate(yt$duration ~ yt$teamleader, yt, mean)
yt <- yt[, !(names(yt) %in% do_not_need)]
# удаляем ненужные переменные
# Способ 1
do_not_need <- c("date_develop", "history", "deviat_numb_ret_oiv", 'date_develop',
'dev_numb_ret_depir',	'deviat_numb_ret_oiv',	'deviat_time_plan',	'time_develop',
'deviat_time_develop',	'deviat_time_rev_oiv',	'deviat_rev_depir',	'deviat_vn_sogl',
'deviat_time_depir',	'deviat_oiv',	'deviat_prep_rg',	'deviat_rg',	'deviat_mrg',
'deviat_time_eaist',	'dev_duration')
yt <- yt[, !(names(yt) %in% do_not_need)]
!(names(yt) %in% do_not_need)
yt[, !(colnames(yt) %in% c('date_rev_ас', 'date_rev_depir', 'det_let_prot', "discription" ))]
# Удаляем столбца X.1, X
yt[, c(yt$X.1, yt$X)] <- NULL
yt <- subset(yt, select = -c(X.1, X))
names(yt) == 'duration'
!(names(yt) %in% do_not_need)
(names(yt) %in% do_not_need)
View(yt)
yt <- yt[, !id]
yt <- yt[, !id]
names(yt)
yt$ktd[yt$tegs == "Не полностью YouTrackная"]
yt <- subset(yt, !tegs%in%"Не полностью YouTrackная")
subset(yt, !tegs%in%"Не полностью YouTrackная")
subset(yt, !tegs%in%"Полностью YouTrackная")
#### Удаляем ненужые строки ####
yt <- subset(yt, !tegs%in%"Полностью YouTrackная")
#### Удаляем ненужые строки ####
yt <- subset(yt, !tegs%in%"Не полностью YouTrackная")
View(yt)
remove(list = ls())
yt <- read.csv2("yt.csv")
#### Добавляем ненужые столбцы ####
yt$what_duration <- ifelse(yt$duration > (mean(yt$duration, na.rm = T) + sd(yt$duration, na.rm = T)),
'Bad duration', "Good duration")
yt$what_numb_ret_depir <- ifelse(yt$numb_ret_depir > (mean(yt$numb_ret_depir, na.rm = T) + sd(yt$numb_ret_depir, na.rm = T)),
"Bad numb_ret_depir", "Good numb_ret_depir")
yt$what_numb_ret_oiv <- ifelse(yt$numb_ret_oiv > (mean(yt$numb_ret_oiv, na.rm = T) + sd(yt$numb_ret_oiv)),
"Bad numb_ret_oiv", "Good numb_ret_oiv")
# add a new column
yt <- yt %>%
mutate(tru = case_when(
startsWith(ktd, "П") ~ "Поставка товра",
startsWith(ktd, "В") ~ "Выполнение работ",
startsWith(ktd, "О") ~ "Оказание услуг",
))
# add a new column
yt <- yt %>%
mutate(tru = case_when(
startsWith(ktd, "П") ~ "Поставка товра",
startsWith(ktd, "В") ~ "Выполнение работ",
startsWith(ktd, "О") ~ "Оказание услуг",
))
# add a new column
yt <- yt %>%
mutate(tru = case_when(
startsWith(ktd, "П") ~ "Поставка товра",
startsWith(ktd, "В") ~ "Выполнение работ",
startsWith(ktd, "О") ~ "Оказание услуг",
))
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
# add a new column
yt <- yt %>%
mutate(tru = case_when(
startsWith(ktd, "П") ~ "Поставка товра",
startsWith(ktd, "В") ~ "Выполнение работ",
startsWith(ktd, "О") ~ "Оказание услуг",
))
View(yt)
aggregate(yt[, c("duration", "numb_ret_depir", "numb_ret_oiv")], by = list(yt$tru), FUN = mean)
aggregate(yt[, c("duration", "numb_ret_depir", "numb_ret_oiv")], by = list(yt$deputy), FUN = mean)
aggregate(cbind(duration, numb_ret_depir, numb_ret_oiv) ~ deputy, yt, mean)
aggregate(cbind(duration, numb_ret_depir, numb_ret_oiv) ~ deputy, subset(yt,
reason %in% c('План по стандартизации', 'Поручение ДЭПиР или руководства')), mean)
aggregate(yt[, c("duration", "numb_ret_depir", "numb_ret_oiv")], by = list(yt$tru), FUN = mean)
aggregate(cbind(duration, numb_ret_depir, numb_ret_oiv) ~ tru, subset(yt,
reason %in% c('План по стандартизации', 'Поручение ДЭПиР или руководства')), mean)
#
aggregate(cbind(duration, numb_ret_depir, numb_ret_oiv) ~ deputy, yt, sd)
aggregate(yt$duration ~ yt$teamleader, yt, mean)
aggregate(yt$duration ~ yt$teamleader, yt, median)
aggregate(yt$duration ~ yt$teamleader + yt$criteria, yt, mean)
aggregate(cbind(duration, numb_ret_depir, numb_ret_oiv) ~ yt$teamleader, yt, mean)
describe(yt[, c(9, 11)])
install.packages('psych')
library(psych)
describe(yt[, c(9, 11)])
yt[, c(9, 11)]
describeBy(x = yt[, c(9, 11, 44)], group = yt$teamleader, mat = T, digits = 2)
describeBy(x = yt[, c(9, 11, 44)], group = yt$teamleader, mat = T, digits = 2)
describe(yt[, c('duration', 'numb_ret_depir', 'numb_ret_oiv')])
describe(yt[, c('duration', 'numb_ret_depir', 'numb_ret_oiv')])
describeBy(cbind(yt$duration, yt$numb_ret_depir, yt$numb_ret_oiv), group = yt$deputy)
describeBy(x = yt[, c("duration", "numb_ret_depir", "numb_ret_oiv")], group = yt$deputy)
describeBy(cbind(cbind(yt$duration, yt$numb_ret_depir, yt$numb_ret_oiv)), group = yt$tru)
describeBy(x = yt[, c("duration", "numb_ret_depir", "numb_ret_oiv")], group = yt$deputy)
describeBy(x = yt[, c("duration", "numb_ret_depir", "numb_ret_oiv")], group = yt$tru)
is.na(yt$duration)
sum(is.na(yt$duration))
#### Визуализация ####
hist(yt$time_depir)
#### Взаимосвязь между количеством возвравтов КТД от ДЭПиР и от ОИВ ####
depir_oiv <- ggplot(data = yt, mapping = aes(x = numb_ret_depir, y =  numb_ret_oiv, color=kind_tz))+
labs(x= "Количество возвратов КТД на доработку по замечаниям ДЭПиР" ,
y= "Количество возвратов КТД на доработку по замечаниям ОИВ", color= "Вид ТЗ",
title = "Взаимосвязь между количеством возвравтов КТД от ДЭПиР и от ОИВ")
depir_oiv + geom_point() + geom_smooth(method = 'lm')
ggplot(yt, aes(x = duration)) +
geom_histogram(fill = "white", col = "black", binwidth = 20) +
xlab("Длительность утверждения КТД, раб. дни") +
ylab("Количество КТД") +
ggtitle("Гистограмма длительности утверждения КТД")
#### Установка пакетов ####
install.packages('ggplot2')
library(ggplot2)
ggplot(yt, aes(x = duration)) +
geom_histogram(fill = "white", col = "black", binwidth = 20) +
xlab("Длительность утверждения КТД, раб. дни") +
ylab("Количество КТД") +
ggtitle("Гистограмма длительности утверждения КТД")
### 1) hist
hist(yt$duration)
hist(yt$duration, breaks = 20)
hist(yt$numb_ret_depir, breaks = 20)
hist(yt$numb_ret_oiv, breaks = 5)
hist(yt$time_depir)
### 2) boxplot
boxplot(duration ~ deputy, yt, ylab = 'Длительность, раб.дн.', xlab = 'Заместитель РПО', main = "Длительность разработки",
col = 'green', cex.lab = 1.3, cex.axis = 1.3)
table(yt$deputy)
### 3) plot
plot(yt$time_depir, yt$numb_ret_depir)
cor.test(yt$time_depir, yt$numb_ret_depir)
plot(density(yt$duration), xlab = "Длительность", main ="Density of Длительность",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
plot(yt$duration, yt$numb_ret_depir, xlab = "Длительность", ylab = "Количество возвратов от ДЭПиР",
main = "Взаимосвязсь между длительностью и количеством возвратов от ДЭПиР", pch = 20)
cor.test(yt$duration, yt$numb_ret_depir)
plot(yt$duration, yt$numb_ret_oiv, xlab = "Длительность", ylab = "Количество возвратов от ОИВ",
main = "Взаимосвязсь между длительностью и количеством возвратов от ОИВ", pch = 20)
cor.test(yt$duration, yt$numb_ret_oiv)
plot(~ duration + numb_ret_depir, yt)
### 3) plot
plot(yt$time_depir, yt$numb_ret_depir)
plot(yt$duration, yt$numb_ret_depir, xlab = "Длительность", ylab = "Количество возвратов от ДЭПиР",
main = "Взаимосвязсь между длительностью и количеством возвратов от ДЭПиР", pch = 20)
plot(~ duration + numb_ret_depir, yt)
ggplot(yt, aes(x = duration)) +
geom_histogram(fill = "white", col = "black", binwidth = 20) +
xlab("Длительность утверждения КТД, раб. дни") +
ylab("Количество КТД") +
ggtitle("Гистограмма длительности утверждения КТД")
ggplot(yt, aes(x = duration, fill = kind_tz)) +
geom_dotplot(binwidth = 15)+
xlab("Длительность") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Гистограмма длительности")
ggplot(yt, aes(x = duration, fill = kind_tz)) +
geom_density(alpha = 0.5) +
xlab("Длительность") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Гистограмма длительности")
ggplot(yt, aes(x = numb_ret_oiv)) +
geom_density(fill = "red")
ggplot(yt, aes(x = numb_ret_depir, fill = kind_tz)) +
geom_density(alpha = 0.5) +
xlab("Количестово возвратов от ДЭПиР") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Количество возрвратов от ДЭПиР")
ggplot(yt, aes(x = numb_ret_depir, fill = kind_tz)) +
geom_density(alpha = 0.5) +
xlab("Количестово возвратов от ДЭПиР") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Количество возрвратов от ДЭПиР")
ggplot(yt, aes(x = numb_ret_depir, fill = kind_tz)) +
geom_density(alpha = 0.5) +
xlab("Количестово возвратов от ДЭПиР") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Количество возрвратов от ДЭПиР")
ggplot(yt, aes(x = duration, y = numb_ret_depir, col = kind_tz, size = numb_ret_oiv)) +
geom_point() +
xlab("Длительность") +
ylab("Количество возвратов от ДЭПиР") +
scale_color_discrete("Вид ТЗ") +
scale_size_continuous("Количество возрвратов от ОИВ") +
ggtitle('Взаимосвязь длительности разработки, количество возрвратов от ДЭПиР, вида ТЗ и количество возрвратов от ОИВ')
ggplot(yt, aes(x = duration, y = numb_ret_depir, col = kind_tz, size = numb_ret_oiv)) +
geom_point() +
xlab("Длительность") +
ylab("Количество возвратов от ДЭПиР") +
ggtitle('Взаимосвязь длительности разработки, количество возрвратов от ДЭПиР, вида ТЗ и количество возрвратов от ОИВ')
#### Взаимосвязь между количеством возвравтов КТД от ДЭПиР и от ОИВ ####
depir_oiv <- ggplot(data = yt, mapping = aes(x = numb_ret_depir, y =  numb_ret_oiv, color=kind_tz))+
labs(x= "Количество возвратов КТД на доработку по замечаниям ДЭПиР" ,
y= "Количество возвратов КТД на доработку по замечаниям ОИВ", color= "Вид ТЗ",
title = "Взаимосвязь между количеством возвравтов КТД от ДЭПиР и от ОИВ")
rm(depir_oiv)
#### Взаимосвязь между количеством возвравтов КТД от ДЭПиР и от ОИВ ####
ggplot(data = yt, mapping = aes(x = numb_ret_depir, y =  numb_ret_oiv, color=kind_tz))+
labs(x= "Количество возвратов КТД на доработку по замечаниям ДЭПиР" ,
y= "Количество возвратов КТД на доработку по замечаниям ОИВ", color= "Вид ТЗ",
title = "Взаимосвязь между количеством возвравтов КТД от ДЭПиР и от ОИВ")
+ geom_point() + geom_smooth(method = 'lm')
ggplot(data = yt, mapping = aes(x = numb_ret_depir, y =  numb_ret_oiv, color=kind_tz))+
labs(x= "Количество возвратов КТД на доработку по замечаниям ДЭПиР" ,
y= "Количество возвратов КТД на доработку по замечаниям ОИВ", color= "Вид ТЗ",
title = "Взаимосвязь между количеством возвравтов КТД от ДЭПиР и от ОИВ") + geom_point() + geom_smooth(method = 'lm')
cor.test(yt$numb_ret_depir, yt$numb_ret_oiv)
cor.test(yt$numb_ret_depir, yt$numb_ret_oiv)
cor.test(yt$numb_ret_depir, yt$numb_ret_oiv, method = 'spearman')
#### Взаимосвязь между количеством возвравтов КТД от ДЭПиР и длительностью ####
ggplot(data = yt, mapping = aes(x = numb_ret_depir, y =  duration, color=kind_tz))+
labs(x= "Количество возвратов КТД на доработку по замечаниям ДЭПиР" ,
y= "Длительность", color= "Вид ТЗ",
title = "Взаимосвязь между количеством возвравтов КТД от ДЭПиР и длительностью") + geom_point() + geom_smooth(method = 'lm')
cor.test(yt$numb_ret_depir, yt$duration)
#### Взаимосвязь между количеством возвравтов КТД от ДЭПиР и длительностью ####
ggplot(data = yt, mapping = aes(x = numb_ret_depir, y =  duration, color=kind_tz))+
labs(x= "Количество возвратов КТД на доработку по замечаниям ДЭПиР" ,
y= "Длительность", color= "Вид ТЗ",
title = "Взаимосвязь между количеством возвравтов КТД от ДЭПиР и длительностью") + geom_point() + geom_smooth(method = 'lm')
#### Взаимосвязь между количеством возвравтов КТД от ОИВ и длительностью ####
oiv_duration <- ggplot(data = yt, mapping = aes(x = numb_ret_depir, y =  duration, color=kind_tz))+
labs(x= "Количество возвратов КТД на доработку по ОИВ" ,
y= "Длительность", color= "Вид ТЗ",
title = "Взаимосвязь между количеством возвравтов ОИВ от ОИВ и длительностью")
oiv_duration + geom_point() + geom_smooth(method = 'lm')
cor.test(yt$numb_ret_oiv, yt$duration)
str(yt)
str(yt)
yt_f_names <- c('reason', 'year_plan_st', 'kvartal', 'stage', 'executor_ac', 'teamleader', 'deputy', 'contract',
'pcp', 'criteria', 'f2', 'method', 'tegs', 'what_duration', 'what_numb_ret_depir', 'what_numb_ret_oiv', 'top_worst_ktd')
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
str(yt)
#### Взаимосвязь между количеством возвравтов КТД от ОИВ и длительностью ####
rm(oiv_duration) <- ggplot(data = yt, mapping = aes(x = numb_ret_depir, y =  duration, color=kind_tz))+
labs(x= "Количество возвратов КТД на доработку по ОИВ" ,
y= "Длительность", color= "Вид ТЗ",
title = "Взаимосвязь между количеством возвравтов ОИВ от ОИВ и длительностью")
rm(oiv_duration)
str(yt)
mean(yt$duration, na.rm = T)
sd(yt$duration, na.rm = T)
t <- -2
N <- 15
2*(1-pt(abs(t), df = N-1))
abs(4)
abs(t)
rm(t, n)
rm(t, N)
89.9 + 2.093 * (11.3/sqrt(20))
89.9 - 2.093 * (11.3/sqrt(20))
89.9 + 2.093 * (11.3/sqrt(20))
(45 - 34)/sqrt((9^2/45) + (10^2/34))
45 + 34
(45 - 34)/(sqrt((9^2/45) + (10^2/34)))
(45 - 34)/sqrt((9^2/45) + (10^2/34))
(45 - 34)/sqrt(((9^2)/45) + ((10^2)/34))
(45 - 34)/sqrt((9^2/45) + (10^2/34))
sd1 <- 9
n1 <- 45
sd2 <- 10
n2 <- 34
x1 <- 45
sd1 <- 9
n1 <- 100
x2 <- 34
sd2 <- 10
n2 <- 100
t <-
(45 - 34)/sqrt((9^2/100) + (10^2/100))
(45 - 34)/sqrt((9^2/100) + (10^2/100))
sqrt((9^2/100) + (10^2/100))
sqrt((sd1^2/n1) + (sd2^2/n2))
se <- sqrt((sd1^2/n1) + (sd2^2/n2))
(x1 - x2)/se
