is_maried <- c(F, F, T, T)
name <- c("Olga", "Maria", "Nastya", "Polina")
data <- list(age, is_maried, name)
View(data)
data
View(data)
data[[1]][1]
View(data)
data[[2]][3]
df <- data.frame(Name = name, Age = age, Status = is_maried)
View(df)
head(df)
typeof(df)
mydata <- read.csv('evals.csv')
source("~/Desktop/Data/GitHub/1.3_my_script.R")
source("~/Desktop/Data/GitHub/1.3_my_script.R")
setwd("C:/Users/GudievZK/Desktop/GitHub/DF/")
setwd("/Users/zelimkhan/Desktop/Data/GitHub/DF/")
df <- read.csv(grants.csv)
df <- read.csv2(grants.csv)
df <- read.csv('grants.csv')
df <- read.csv("grants.csv")
str(df)
df$status <- as.factor(df$status)
str(df)
levels(df$status) <- c("Not funded", "Funded")
str(df)
# 1d Table
t1 <- table(df$status)
t1
dim(t1)
table(yt$deputy)
yt <- read.csv2("yt.csv")
table(yt$deputy)
table(yt$deputy)
View(yt)
yt <- read.csv2("yt.csv")
yt <- read.csv2("yt.csv")
df  <- mtcars
remove(list = ls())
yt <- read.csv2("yt.csv")
yt <- read.csv("yt.csv")
setwd("/Users/zelimkhan/Desktop/Data/GitHub/DF/")
yt <- read.csv2("yt.csv")
yt <- read.csv2("yt.csv")
str(yt)
yt_f_names <- c('reason', 'year_plan_st', 'kvartal', 'stage', 'executor_ac', 'teamleader', 'deputy', 'contract',
'pcp', 'criteria', 'f2', 'method', 'tegs')
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
str(yt)
# 1d Table
t1 <- table(df$status)
df <- read.csv('grants.csv')
yt <- read.csv2("yt.csv")
str(yt)
yt_f_names <- c('reason', 'year_plan_st', 'kvartal', 'stage', 'executor_ac', 'teamleader', 'deputy', 'contract',
'pcp', 'criteria', 'f2', 'method', 'tegs')
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
write.csv2(yt, "yt.csv")
yt <- read.csv2("yt.csv")
str(yt)
yt_f_names <- c('reason', 'year_plan_st', 'kvartal', 'stage', 'executor_ac', 'teamleader', 'deputy', 'contract',
'pcp', 'criteria', 'f2', 'method', 'tegs')
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
table(yt$deputy)
# 2d Table
t2 <- table(df$status, df$field)
t2
# 1d Table
t1 <- table(df$status)
t1
table(yt$deputy)
table(yt$kind_tz)
bad_duration <- yt$ktd[yt$duration > (mean(yt$duration, na.rm = T) + sd(yt$duration, na.rm = T))]
bad_numb_ret_depir <- yt$ktd[yt$numb_ret_depir > (mean(yt$numb_ret_depir, na.rm = T) + sd(yt$numb_ret_depir, na.rm = T))]
bad_numb_ret_oiv <- yt$ktd[yt$numb_ret_oiv > (mean(yt$numb_ret_oiv, na.rm = T) + sd(yt$numb_ret_oiv, na.rm = T))]
bad_duration
bad_numb_ret_depir
bad_numb_ret_oiv
write.csv2(yt, "yt_ish.csv")
read.csv2("yt_ish.csv")
View("yt_ish.csv")
yt_ish.csv <- read.csv2("yt_ish.csv")
View(yt)
do_not_need <- c("date_develop", "history", "deviat_numb_ret_oiv", 'date_develop',
'dev_numb_ret_depir',	'deviat_numb_ret_oiv',	'deviat_time_plan',	'time_develop',
'deviat_time_develop',	'deviat_time_rev_oiv',	'deviat_rev_depir',	'deviat_vn_sogl',
'deviat_time_depir',	'deviat_oiv',	'deviat_prep_rg',	'deviat_rg',	'deviat_mrg',
'deviat_time_eaist',	'dev_duration')
yt <- subset(yt, select = - do_not_need)
yt <- subset(yt, select = - c(do_not_need))
yt <- subset(yt, select = - c("date_develop", "history", "deviat_numb_ret_oiv", 'date_develop',
'dev_numb_ret_depir',	'deviat_numb_ret_oiv',	'deviat_time_plan',	'time_develop',
'deviat_time_develop',	'deviat_time_rev_oiv',	'deviat_rev_depir',	'deviat_vn_sogl',
'deviat_time_depir',	'deviat_oiv',	'deviat_prep_rg',	'deviat_rg',	'deviat_mrg',
'deviat_time_eaist',	'dev_duration')))
yt <- subset(yt, select = - c("date_develop", "history", "deviat_numb_ret_oiv", 'date_develop',
'dev_numb_ret_depir',	'deviat_numb_ret_oiv',	'deviat_time_plan',	'time_develop',
'deviat_time_develop',	'deviat_time_rev_oiv',	'deviat_rev_depir',	'deviat_vn_sogl',
'deviat_time_depir',	'deviat_oiv',	'deviat_prep_rg',	'deviat_rg',	'deviat_mrg',
'deviat_time_eaist',	'dev_duration'))
yt <- yt[, !(names(yt) %in% do_not_need)]
View(yt)
(names(yt)
names(yt)
names(yt)
yt[, date_rev_ас := NULL]
yt[, 'date_rev_ас' := NULL]
yt[, !'date_rev_ас']
yt[, ! yt$date_rev_ас]
yt[, !yt$date_rev_ас]
yt[, !'date_rev_ас']
yt[, 'date_rev_ас' := NULL]
colnames(yt)
yt$det_let_prot
yt$discription
colnames(yt)
yt <- yt[, !(colnames(yt) %in% c('date_rev_ас', 'date_rev_depir', 'det_let_prot', "discription" ))]
yt$bad_duration <- ifelse(yt$ktd[yt$duration > (mean(yt$duration, na.rm = T) + sd(yt$duration, na.rm = T))], 'bad_duration', "good_duration")
yt$bad_duration <- NA
yt$bad_duration <- ifelse(yt$ktd[yt$duration > (mean(yt$duration, na.rm = T) + sd(yt$duration, na.rm = T))],
'bad_duration', "good_duration")
yt$bad_duration <- NULL
yt$what_duration <- ifelse(yt$ktd[yt$duration > (mean(yt$duration, na.rm = T) + sd(yt$duration, na.rm = T))],
'bad_duration', "good_duration")
yt[yt$duration > mean(yt$duration, na.rm = T), 3]
yt[yt$deputy == "Гудиев Зелимхан Куйраевич", 3]
yt[yt$deputy == "Гудиев Зелимхан Куйраевич" & yt$duration > mean(yt$duration, na.rm = T), 3]
View(yt[yt$deputy == "Гудиев Зелимхан Куйраевич" & yt$duration > mean(yt$duration, na.rm = T), c(1:3)])
subset(yt, deputy == 'Гудиев Зелимхан Куйраевич')
View(subset(yt, deputy == "Гудиев Зелимхан Куйраевич"))
bad_duration <- yt$ktd[yt$duration > (mean(yt$duration, na.rm = T) + sd(yt$duration, na.rm = T))
bad_duration
bad_duration <- yt$ktd[yt$duration > (mean(yt$duration, na.rm = T) + sd(yt$duration, na.rm = T))]
bad_duration
yt$what_duration <- ifelse(yt$duration > (mean(yt$duration, na.rm = T) + sd(yt$duration, na.rm = T))],
'bad_duration', "good_duration")
yt$what_duration <- ifelse(yt$duration > (mean(yt$duration, na.rm = T) + sd(yt$duration, na.rm = T)),
'bad_duration', "good_duration")
View(yt)
yt$what_numb_ret_depir <- ifelse(yt$numb_ret_depir > (mean(yt$numb_ret_depir, na.rm = T) + sd(yt$numb_ret_depir, na.rm = T)),
"Bad numb_ret_depir", "Good numb_ret_depir")
yt$what_numb_ret_oiv <- ifelse(yt$numb_ret_oiv > (mean(yt$numb_ret_oiv, na.rm = T) + sd(yt$numb_ret_oiv)),
"Bad numb_ret_oiv", "Good numb_ret_oiv")
View(yt)
print ('3')
yt$top_worst_ktd <- if(yt$what_duration == 'Bad duration' & yt$what_numb_ret_depir == 'numb_ret_depir'
& yt$what_numb_ret_oiv == 'Bad numb_ret_oiv') {
print ('1')
} else if (
(yt$what_duration == 'Bad duration' & (yt$what_numb_ret_depir == 'Bad numb_ret_depir' | yt$what_numb_ret_oiv == 'Bad numb_ret_oiv'))
| ((yt$what_numb_ret_depir == 'Bad numb_ret_depir') & (yt$what_duration == 'Bad duration' | yt$what_numb_ret_oiv == 'Bad numb_ret_oiv'))
| ((yt$what_numb_ret_oiv == 'Bad numb_ret_oiv') & (yt$what_duration == 'Bad duration' | yt$what_numb_ret_depir == 'Bad numb_ret_depir')))
{
print ('2')
} else {
print ('3')
}
yt$top_worst_ktd <- if(yt$what_duration == 'Bad duration' & yt$what_numb_ret_depir == 'numb_ret_depir'
& yt$what_numb_ret_oiv == 'Bad numb_ret_oiv')
{
print ('1')
} else if (
(yt$what_duration == 'Bad duration' & (yt$what_numb_ret_depir == 'Bad numb_ret_depir' | yt$what_numb_ret_oiv == 'Bad numb_ret_oiv'))
| ((yt$what_numb_ret_depir == 'Bad numb_ret_depir') & (yt$what_duration == 'Bad duration' | yt$what_numb_ret_oiv == 'Bad numb_ret_oiv'))
| ((yt$what_numb_ret_oiv == 'Bad numb_ret_oiv') & (yt$what_duration == 'Bad duration' | yt$what_numb_ret_depir == 'Bad numb_ret_depir')))
{
print ('2')
} else
{
print ('3')
}
yt$top_worst_ktd <- if(yt$what_duration == 'Bad duration' & yt$what_numb_ret_depir == 'numb_ret_depir'
& yt$what_numb_ret_oiv == 'Bad numb_ret_oiv')
{
print ('1')
} else if (
(yt$what_duration == 'Bad duration' & (yt$what_numb_ret_depir == 'Bad numb_ret_depir' | yt$what_numb_ret_oiv == 'Bad numb_ret_oiv'))
| ((yt$what_numb_ret_depir == 'Bad numb_ret_depir') & (yt$what_duration == 'Bad duration' | yt$what_numb_ret_oiv == 'Bad numb_ret_oiv'))
| ((yt$what_numb_ret_oiv == 'Bad numb_ret_oiv') & (yt$what_duration == 'Bad duration' | yt$what_numb_ret_depir == 'Bad numb_ret_depir')))
{
print ('2')
}
yt$top_worst_ktd <- NULL
write.csv2(yt, 'yt.csv')
View(yt)
yt <- read.csv2("yt.csv")
View(yt)
yt$what_duration <- ifelse(yt$duration > (mean(yt$duration, na.rm = T) + sd(yt$duration, na.rm = T)),
'Bad duration', "Good duration")
write.csv2(yt, 'yt.csv')
View(yt)
table(yt$deputy, yt$top_worst_ktd)
yt$ktd[yt$top_worst_ktd == '1']
yt$ktd[yt$top_worst_ktd == '2']
table(yt$deputy, yt$top_worst_ktd)
yt$ktd[yt$deputy == ' ']
yt$ktd[yt$deputy == '']
yt$teamleader[yt$ktd == c("Поставка химических веществ", "Поставка мебели детской и ученической",
"Поставка учебного оборудования для музыкального класса, закупаемого в рамках проекта «Техносфера современной школы»")]
yt$teamleader[yt$ktd == "Поставка химических веществ" | "Поставка мебели детской и ученической" |
"Поставка учебного оборудования для музыкального класса, закупаемого в рамках проекта «Техносфера современной школы»")]
yt$teamleader[yt$ktd == "Поставка химических веществ" | yt$ktd == "Поставка мебели детской и ученической" | yt$ktd ==
"Поставка учебного оборудования для музыкального класса, закупаемого в рамках проекта «Техносфера современной школы»")]
yt$teamleader[yt$ktd == "Поставка химических веществ"]
yt$teamleader[yt$ktd == "Поставка мебели детской и ученической"]
yt$teamleader[yt$ktd == "Поставка учебного оборудования для музыкального класса, закупаемого в рамках проекта «Техносфера современной школы»"]
yt$deputy[yt$deputy == '']
yt$deputy[yt$deputy == ''] <- 'Чурсина Мария Вячеславовна'
yt$deputy[yt$deputy == '']
yt$deputy[yt$ktd == "Поставка химических веществ"] <- 'Чурсина Мария Вячеславовна'
View(yt)
| "Поставка учебного оборудования для музыкального класса, закупаемого в рамках проекта «Техносфера современной школы»"] <- 'Чурсина Мария Вячеславовна'
yt$deputy[yt$ktd == ("Поставка химических веществ" | "Поставка мебели детской и ученической"
View(yt)
View(yt)
yt$deputy
yt$deputy[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")]
yt$deputy[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")] <-
yt$ktd[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")]
yt$deputy[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")] <-
yt$ktd[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")]
yt$deputy[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")] <-
yt$ktd[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")]
yt$deputy[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")] <-
yt$ktd[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")]
yt$ktd
yt$ktd[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")]
yt$deputy
View(yt)
yt$deputy[yt$ktd == 'Оказание услуг по техническому обслуживанию и текущему ремонту объектов коллекторного хозяйства'] <- 'Гудиев Зелимхан Куйраевич'
yt$ktd[yt$deputy == ("Гудиев Зелимхан Куйраевич / Майоров Артем Сергеевич")]
write.csv2(yt, "yt.csv")
table(yt$deputy, yt$top_worst_ktd)
table(yt$deputy, yt$top_worst_ktd)
yt_t1 <- table(yt$deputy, yt$top_worst_ktd)
yt_t1 <- table('Заместитель' = yt$deputy, 'Количество наихудших КТД' = yt$top_worst_ktd)
yt_t1
as.data.frame(yt_t1)
yt_t1 <- as.data.frame(yt_t1)
View(yt_t1)
yt_t1 <- table('Заместитель' = yt$deputy, 'Уровень наихудших КТД' = yt$top_worst_ktd)
yt_t1 <- as.data.frame(yt_t1)
View(yt_t1)
dim(yt_t1)
prop.table(yt_t1)
yt_t1 <- table('Заместитель' = yt$deputy, 'Уровень наихудших КТД' = yt$top_worst_ktd)
prop.table(yt_t1)
prop.table(yt_t1, digit = 1)
prop.table(yt_t1, digits = 1)
prop.table(yt_t1)
prop.table(yt_t1, 1)
prop.table(yt_t1, 2)
View(yt)
# ТРУ
yt$ktd[yt$ktd == "Поставка *"]
grep("Поставка", yt$ktd, value = T)
grep("Окакзание", yt$ktd, value = T)
grep("Оказание", yt$ktd, value = T)
grep("Выполнение", yt$ktd, value = T)
12+36+58
View(yt)
yt$ktd[yt$ktd == "Разработка проектно-сметной документации на устройство сетей электроснабжения и электроосвещения"] <- "Выполнение работ по разработке проектно-сметной документации на устройство сетей электроснабжения и электроосвещения"
grep("Выполнение", yt$ktd, value = T)
# ТРУ
yt$ktd[yt$ktd == "Разработка проектно-сметной документации на устройство сетей электроснабжения и электроосвещения"] <- "Выполнение работ по разработке проектно-сметной документации на устройство сетей электроснабжения и электроосвещения"
yt$ktd[yt$ktd == "Поставка",]
grep("Поставка", yt$ktd, value = T)
grep("Оказание", yt$ktd, value = T)
grep("Выполнение", yt$ktd, value = T)
yt$tru <- if(grep("Поставка", yt$ktd, value = T)) {
print("Потавка товара")
} else if (grep("Оказание", yt$ktd, value = T)) {
print("Оказание услуг")
} else {
print("Выполнение работ")
}
yt$tru <- if(grep("Поставка", yt$ktd, value = T)) {
print("Потавка товара")
} else if (grep("Оказание", yt$ktd, value = T)) {
print("Оказание услуг")
} else {
print("Выполнение работ")
}
grep("Выполнение", yt$ktd, value = T)
grep("Оказание", yt$ktd, value = T)
grep("Поставка", yt$ktd, value = T)
yt$tru <- "Потавка товара"
yt$tru
if(grep("Поставка", yt$ktd, value = T)) {
print("Потавка товара")
} else if (grep("Оказание", yt$ktd, value = T)) {
print("Оказание услуг")
} else {
print("Выполнение работ")
}
if(grep("Поставка", yt$ktd, value = T)) {
yt$tru <- "Потавка товара"
} else if (grep("Оказание", yt$ktd, value = T)) {
yt$tru <- "Оказание услуг"
} else {
yt$tru <- "Выполнение работ"
}
for (i in 1:nrow(yt)) {
View(yt)
View(yt)
View(yt)
View(yt)
View(yt)
View(yt)
View(yt)
View(yt)
if(grep("Поставка", yt$ktd, value = T)) {
yt$tru <- "Потавка товара"
} else if (grep("Оказание", yt$ktd, value = T)) {
yt$tru <- "Оказание услуг"
} else {
yt$tru <- "Выполнение работ"
}
View(yt)
View(yt)
View(yt)
View(yt)
for (i in 1:nrow(yt)) {
yt$tru[i] <- "Потавка товара"
if(grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
View(yt)
for (i in 1:nrow(yt)) {
yt$tru[i] <- "Потавка товара"
if(grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
View(yt)
for (i in 1:nrow(yt)) {
if(grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
for (i in 1:nrow(yt)) {
yt$tru[i] <- "Потавка товара"
if(grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
for (i in 1:nrow(yt)) {
if(grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
for (i in 1:nrow(yt)) {
if(grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
for (i in 1:nrow(yt)) {
if(grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
for (i in 1:nrow(yt)) {
if(grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
for (i in 1:nrow(yt)) {
if(grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
for (i in 1:nrow(yt)) {
if (yt$duration[i] > mean(yt$duration, na.rm = T)) {
yt$quality[i] <- "dur more than mean"
} if (yt$duration[i] < mean(yt$duration, na.rm = T)) {
yt$quality[i] <- "dur less than mean"
} else yt$quality[i] <- "dur equal mean"
}
for (i in 1:nrow(yt)) {
if (yt$duration[i] > mean(yt$duration, na.rm = T)) {
yt$quality[i] <- "dur more than mean"
} if (yt$duration[i] < mean(yt$duration, na.rm = T)) {
yt$quality[i] <- "dur less than mean"
} else yt$quality[i] <- "dur equal mean"
}
View(yt)
for (i in 1:nrow(yt)) {
if(grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
for (i in 1:nrow(mydata)) {             # задаем вектор, который должен пробегать оператор for
if (mydata$score[i] > 4){             # задаем условия для операторра if. Проверяем в i строке mydata$score больше 4
mydata$quality[i] <- 'good'         # указываем действие, которое необходимо выполнить если условие выполнено. Если в i строке значение mydata$score больше 4, то в этой i строке в столбце mydata$quality записываем значение 'good'
} else mydata$quality[i] <- 'bad'     # указываем действие, которое необходимо выполнить если условие не выполнено. Если в i строке значение mydata$score не больше 4, то в этой i строке в столбце mydata$quality записываем значение 'bad'
}
for (i in 1:nrow(yt)) {
if (grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
if (grep("Поставка", yt$ktd[i], value = T))
yt$tru[i] <- "Потавка товара"
for (i in 1:nrow(yt)) {
if (grep("Поставка", yt$ktd[i], value = T))
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
View(yt)
for (i in 1:nrow(yt)) {
if (grep("Поставка", yt$ktd[i], value = T))
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
for (i in 1:nrow(yt)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
else yt$tru[i] <- "Выполнение работ"
View(yt)
for (i in 1:nrow(yt)) {
if (grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
for (i in 1:nrow(yt)) {
if (grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} else if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
View(yt)
for (i in 1:nrow(yt)) {
if (grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} else if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
for (i in 1:nrow(yt)) {
if (grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} else if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
for (i in 1:nrow(yt)) {
if (grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} else if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
install.packages("stringr")                  # Install stringr package
library("stringr")
yt$ktd[yt$ktd == "Поставка"]
yt$ktd[yt$ktd == "Поставка  "]
yt$ktd[yt$ktd == "Поставка "]
yt$ktd[yt$ktd == "Поставка *"]
for (i in 1:nrow(yt)) {
if (grep("Поставка", yt$ktd[i], value = T)) {
yt$tru[i] <- "Потавка товара"
} else if (grep("Оказание", yt$ktd[i], value = T)) {
yt$tru[i] <- "Оказание услуг"
} else yt$tru[i] <- "Выполнение работ"
}
yt$tru[grep("Оказание", yt$ktd, value = T)] <- "Оказание услуг"
prop.table(yt_t1, 1)
prop.table(yt_t1, 2)
HairEyeColor
dimnames(HairEyeColor)
HairEyeColor[, , "Male"]
# позволит нам посмотреть, какие измерения есть в этой таблице и как они называются. Например, чтобы обратиться к части таблицы,
# в которой хранятся данные только о мужчинах, нам нужно выполнить следующую команду:
HairEyeColor[ , ,'Male']
HairEyeColor
# позволит нам посмотреть, какие измерения есть в этой таблице и как они называются. Например, чтобы обратиться к части таблицы,
# в которой хранятся данные только о мужчинах, нам нужно выполнить следующую команду:
HairEyeColor[ , ,'Male']
# позволит нам посмотреть, какие измерения есть в этой таблице и как они называются. Например, чтобы обратиться к части таблицы,
# в которой хранятся данные только о мужчинах, нам нужно выполнить следующую команду:
HairEyeColor[ , ,'Male']
HairEyeColor
t_hec <- table(HairEyeColor$sex[HairEyeColor$sex == "male"], HairEyeColor$Hair, HairEyeColor$Eye)
# Ваша задача в переменную red_men сохранить долю рыжеволосых (Red) от общего числа голубоглазых мужчин.
# Обратите внимание, что нужны не проценты, а просто доля, то есть десятичная дробь  (например, не 10%, а 0.1).
# Дополните код, чтобы получить верный ответ.
red_men <- prop.table(HairEyeColor[, , "male"], 2)
