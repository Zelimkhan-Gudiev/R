my_var1 <- 42
my_var2 <- 35.25
my_var1 + 100
my_var1
my_var1 + my_var2 - 12
my_var3 <- my_var1^2 + my_var2^2
my_var3 > 200
my_var3 > 30099
my_var1 == my_var2
my_var1 != my_var2
my_new_var <- my_var1 == my_var2
1 : 67
my_vector1 <- 1:67
my_vector2 <- c(-32, 45, 67, 12.78, 129, 0, -65)
my_vector1[1]
my_vector1[3]
my_vector2[2]
my_vector2[c(1,2,3)]
1:3
my_vector2[1:3]
my_vector2[c(1,5,6,7,10)]
my_vector1 + 10
my_vector2 + 56
my_vector2 == 0
my_vector1 > 30
x <- 23
my_vector1 > 23
my_vector1 > x
x == 23
my_vector2 > 0
my_vector2[my_vector2 > 0]
my_vector2[my_vector2 < 0]
my_vector2[my_vector2 == 0]
my_vector1[my_vector1 > 20 & my_vector1 < 30]
positive_numbers <- my_vector2[my_vector2 > 0]
my_vector2
positive_numbers
v1 <-  c(165, 178, 180, 181, 167, 178, 187, 167, 187)
mean_v1 <- mean(v1)
mean_v1
v1[v1 > mean_v1]
greater_than_mean <- v1[v1 > mean_v1]
greater_than_mean
age <- c(16, 18, 22, 27)
is_maried <- c(F, F, T, T)
name <- c("Olga", "Maria", "Nastya", "Polina")
data <- list(age, is_maried, name)
View(data)
data
View(data)
data[[1]][1]
View(data)
data[[2]][3]
df <- data.frame(Name = name, Age = age, Status = is_maried)
View(df)
head(df)
typeof(df)
mydata <- read.csv('evals.csv')
source("~/Desktop/Data/GitHub/1.3_my_script.R")
source("~/Desktop/Data/GitHub/1.3_my_script.R")
#### if ####
# оператор if: 1) принимает на вход условие; 2) затем проверяет выполняется ли данное условие;
# 3) если выполняестя, то выполняет некоторую комманду; 4) если условие не выполняется то выполняет другую комманду
a <- -10
# два варианта
if (a > 0) { # 1) принимает на вход условие if (a > 0); 2) затем проверяет выполняется ли данное условие;
print('positive') # 3) если выполняестя, то выполняет некоторую комманду print('positive');
} else('not positive') # 4) если условие не выполняется то выполняет другую комманду else('not positive');
#### ifelse  ####
# ifelse позволяет записать вышеуказанную конструкцию в одну строку
a <- 10
ifelse(a > 0, 'positive', 'not positive')
ifelse(a > 0, 'positive', 'not positive')
a <- c(1, -1) # ifelse позволяет работать с векторами произвольной длины. В данном случае длина вектора а равняется двум a <- c(1, -1)
ifelse(a > 0, 'positive', 'not positive')
# В отличии от ifelse операторр if не позволяет работать с векторами произвольной длины.
a <- c(1, -1)
if (a > 0) {
print('positive')
} else if (a < 0) {
print('negative')
} else print('zero')
#### for ####
# цикл for позволяет выполнять много раз рутинную операцию (с каждым элементом вектора)
for (i in 1:10) {
print(i)
}
#### Data preparation (Подготовка данных) ####
mydata <-  read.csv("/Users/zelimkhan/Desktop/evals.csv") # не работает
mydata <- read.csv('evals.csv')
setwd("~/Desktop/Data/GitHub/DF")
mydata <- read.csv('evals.csv')
yt <- read.csv('yt.csv') # Отступление
yt <- read.csv2('yt.csv') # Отступление
# отсутпление
for(i in 1:nrow(yt)) {
print(yt$ktd)
}
print(yt$duration)
while (i < 51) {            # оператор while будет выполнять нижеуказанные действия до тех пор пока i < 51
print(mydata$score[i])    # если i, то
i <- i + 1
}
