my_var1 <- 42
my_var2 <- 35.25
my_var1 + 100
my_var1
my_var1 + my_var2 - 12
my_var3 <- my_var1^2 + my_var2^2
my_var3 > 200
my_var3 > 30099
my_var1 == my_var2
my_var1 != my_var2
my_new_var <- my_var1 == my_var2
1 : 67
my_vector1 <- 1:67
my_vector2 <- c(-32, 45, 67, 12.78, 129, 0, -65)
my_vector1[1]
my_vector1[3]
my_vector2[2]
my_vector2[c(1,2,3)]
1:3
my_vector2[1:3]
my_vector2[c(1,5,6,7,10)]
my_vector1 + 10
my_vector2 + 56
my_vector2 == 0
my_vector1 > 30
x <- 23
my_vector1 > 23
my_vector1 > x
x == 23
my_vector2 > 0
my_vector2[my_vector2 > 0]
my_vector2[my_vector2 < 0]
my_vector2[my_vector2 == 0]
my_vector1[my_vector1 > 20 & my_vector1 < 30]
positive_numbers <- my_vector2[my_vector2 > 0]
my_vector2
positive_numbers
v1 <-  c(165, 178, 180, 181, 167, 178, 187, 167, 187)
mean_v1 <- mean(v1)
mean_v1
v1[v1 > mean_v1]
greater_than_mean <- v1[v1 > mean_v1]
greater_than_mean
age <- c(16, 18, 22, 27)
is_maried <- c(F, F, T, T)
name <- c("Olga", "Maria", "Nastya", "Polina")
data <- list(age, is_maried, name)
View(data)
data
View(data)
data[[1]][1]
View(data)
data[[2]][3]
df <- data.frame(Name = name, Age = age, Status = is_maried)
View(df)
head(df)
typeof(df)
mydata <- read.csv('evals.csv')
source("~/Desktop/Data/GitHub/1.3_my_script.R")
source("~/Desktop/Data/GitHub/1.3_my_script.R")
setwd("~/Desktop/Data/GitHub/DF")
my_data <- read.csv('https://stepik.org/media/attachments/lesson/11481/evals.csv')
head(my_data) # комманда head по умолчанию выводит шесть первых строк
View(my_data)
summary(my_data)
a <- names(my_data)
a
b <- my_data$score
b
mean(my_data$score)
summary(my_data$score)
my_data$score*2
my_data$ten_point_scale <- my_data$score*2 # Если после знака $ указать не существующую переменную,
summary(my_data$ten_point_scale)
my_data$new_variable <- 0
View(my_data)
my_data$number <- 1:nrow(my_data)
my_data$number
summary(my_data$number)
nrow(my_data)
ncol(my_data)
my_data$score[1:10]
my_data[1,1]
my_data[c(2,193,225),1]
my_data[101:200,1]
my_data[5,]
my_data[,1] == my_data$score
View(my_data[,2:5])
my_data$gender == 'female' # обратимя к тем значениям переменной my_data$gender, значения которых являются 'female'
my_data[my_data$gender == 'female', 1:3] # можно обращаться к любому количеству столбцов, например к первым трем стобцам
View(my_data[my_data$gender == 'female', c(1:3)])
head(my_data[my_data$gender == 'female', 1:3])
#### rbind, cbind (rowbind - соединение по строкам, colomnbind - соединение по столбцам) ####
# для демонтрации того, что делают данные функции создадим два дата фрейма my_data2, my_data3
my_data2 <- subset(my_data, gender == 'female') # дата фрейм my_data2 будет содержать только те наблюдения где преподователь женщина
my_data3 <- subset(my_data, gender == 'male') # дата фрейм my_data3 будет содержать только те наблюдения где преподователь мужчина
View(my_data)
195+268
#### Step 7 of 11 ####
# В этой задче поработаем со встроенными данными mtcars. В датафрэйме mtcars создайте новую колонку (переменную)
# под названием even_gear, в которой будут единицы, если значение переменной (gear) четное, и нули если количество нечетное.
# Подсказка: вам может помочь оператор деления с остатком:5 %% 2 == 1 TRUE
# Решения
# Вариант 1
mtcars$even_gear <- ifelse (mtcars$gear %% 2 == 1, 0, 1)
View(mtcars)
# Варинат 2
mtcars$even_gear1 <- (mtcars$gear+1) %% 2
View(mtcars)
# Вариант 4
data('mtcars')
a <- mtcars$gear
even <- subset(mtcars, a%%2 == 0)
even <- subset(mtcars, a%%2 == 0) # создадим переменную even и запишем в нее значения перменной mtcars$gear, если остаток деления a%%2 == 0 ()
View(even)
even <- subset(mtcars, a%%2 == 0) # создадим дата фрейм even и сохраним в нем сабсет данных, значения переменной a <- mtcars$gear отвечает условию: остаток деления а на 2 равен 0 (a%%2 == 0), т.е. четные значения
even$even_gear <- 1
