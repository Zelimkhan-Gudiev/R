499786374.5 / 100 * 100
499786375 * 110
507643146,3 <= 54976501250
507643146.3 <= 54976501250
excel_sheets("C:/Users/GudievZK/Downloads/2022.10.10 Выгрузка для пресс-релиза")
excel_sheets("C:/Users/GudievZK/Downloads/2022.10.10 Выгрузка для пресс-релиза.xlsx")
df <- read_excel("C:/Users/GudievZK/Downloads/Выгрузка для пресс-релиза.xlsx", sheet = "Лист1")
remove(list = ls())
df <- read_excel("C:/Users/GudievZK/Downloads/Выгрузка для пресс-релиза.xlsx", sheet = "Лист1")
View(df)
df <- read_excel("C:/Users/GudievZK/Downloads/2022.10.10 Выгрузка для пресс-релиза.xlsx", sheet = "Лист1")
View(df)
df <- as_data_frame(df)
df
colSums(df)
View(df)
colSums(df)
colSums(df[-1, ])
colSums(df$`Количество процедур с применением ТЗ, по которым было опубликовано извещение с 01.01.2022 г по 30.09.2022 г`)
colSums(df[-1, ])
colSums(df[, -1])
sum(df$`Количество процедур с применением ТЗ, по которым было опубликовано извещение с 01.01.2022 г по 30.09.2022 г`)
as.numeric(df$`Количество процедур с применением ТЗ, по которым было опубликовано извещение с 01.01.2022 г по 30.09.2022 г`)
sum(as.numeric(df$`Количество процедур с применением ТЗ, по которым было опубликовано извещение с 01.01.2022 г по 30.09.2022 г`))
colSums(df[, -1])
library(dplyr)
remove(list = ls())
"number_of_KPGZ" = c(5880, 6380, 6260, 6250, 6360, 6410, 6470))
number_of_KPGZ = c(5880, 6380, 6260, 6250, 6360, 6410, 6470))
number_of_KPGZ = c(5880, 6380, 6260, 6250, 6360, 6410, 6470))
df <- as_data_frame(c(number_of_KPGZ = c(99000, 96800, 91500, 89460, 72740, 70640),
df <- as_data_frame(c(number_of_KPGZ = c(99000, 96800, 91500, 89460, 72740, 70640),
df <- as_data_frame(c(number_of_KPGZ = c(99000, 96800, 91500, 89460, 72740, 70640),
number_of_KPGZ = c(5880, 6380, 6260, 6250, 6360, 6410, 6470)))
df <- as_data_frame(number_of_KPGZ = c(99000, 96800, 91500, 89460, 72740, 70640),
number_of_KPGZ = c(5880, 6380, 6260, 6250, 6360, 6410, 6470))
df <- as_data_frame(number_of_KPGZ = c(99000, 96800, 91500, 89460, 72740, 70640),
number_of_KPGZ = c(5880, 6380, 6260, 6250, 6360, 6410, 6470)
)
df <- data_frame(number_of_KPGZ = c(99000, 96800, 91500, 89460, 72740, 70640),
number_of_KPGZ = c(5880, 6380, 6260, 6250, 6360, 6410, 6470)
)
df <- data_frame(number_of_KPGZ = c(99000, 96800, 91500, 89460, 72740, 70640),
number_of_KPGZ = c(5880, 6380, 6260, 6250, 6360, 6410, 6470)
)
df <- data_frame(number_of_KPGZ = c(99000, 96800, 91500, 89460, 88270, 72400, 70640),
number_of_KPGZ = c(5880,  6380,  6260,  6250,  6360,  6410,  6470)
)
df <- data_frame(number_of_KPGZ = c(99000, 96800, 91500, 89460, 88270, 72400, 70640),
number_of_SPGZ = c(5880,  6380,  6260,  6250,  6360,  6410,  6470)
)
View(df)
df <- data_frame(period         = c(1kv2021, 2kv2021, 3kv2021, 4kv2021, 1v2022, 2kv2022, 3kv2022)
number_of_KPGZ = c(99000, 96800, 91500, 89460, 88270, 72400, 70640),
number_of_SPGZ = c(5880,  6380,  6260,  6250,  6360,  6410,  6470)
)
remove(list = ls())
df <- data_frame(period         = c(1kv2021, 2kv2021, 3kv2021, 4kv2021, 1v2022, 2kv2022, 3kv2022)
number_of_KPGZ = c(99000, 96800, 91500, 89460, 88270, 72400, 70640),
number_of_SPGZ = c(5880,  6380,  6260,  6250,  6360,  6410,  6470)
)
df
df <- data_frame(period         = c(1kv2021, 2kv2021, 3kv2021, 4kv2021, 1v2022, 2kv2022, 3kv2022),
number_of_KPGZ = c(99000, 96800, 91500, 89460, 88270, 72400, 70640),
number_of_SPGZ = c(5880,  6380,  6260,  6250,  6360,  6410,  6470)
)
df <- data_frame(period  = c(1kv2021, 2kv2021, 3kv2021, 4kv2021, 1v2022, 2kv2022, 3kv2022),
number_of_KPGZ = c(99000, 96800, 91500, 89460, 88270, 72400, 70640),
number_of_SPGZ = c(5880,  6380,  6260,  6250,  6360,  6410,  6470)
)
df <- data_frame(period  = c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022'),
number_of_KPGZ = c(99000, 96800, 91500, 89460, 88270, 72400, 70640),
number_of_SPGZ = c(5880,  6380,  6260,  6250,  6360,  6410,  6470)
)
remove(list = ls())
df <- data_frame(period  = c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022'),
number_of_KPGZ = c(99000, 96800, 91500, 89460, 88270, 72400, 70640),
number_of_SPGZ = c(5880,  6380,  6260,  6250,  6360,  6410,  6470)
)
View(df)
remove(list = ls())
df <- data_frame(period         = c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022'),
number_of_KPGZ = c(  5880,      6380,      6260,      6250,     6360,      6410,      6470),
prop_KPGZ      = c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71),
number_of_SPGZ = c(99000,      96800,     91500,     89460,    88270,     72400,     70640),
prop_SPGZ      = c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23)
)
View(df)
number_of_KPGZ = c(  5880,      6380,      6260,      6250,     6360,      6410,      6470),
prop_KPGZ      = c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71),
number_of_SPGZ = c(99000,      96800,     91500,     89460,    88270,     72400,     70640),
prop_SPGZ      = c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23)
number_of_KPGZ = c(  5880,      6380,      6260,      6250,     6360,      6410,      6470)
prop_KPGZ      = c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71)
number_of_SPGZ = c(99000,      96800,     91500,     89460,    88270,     72400,     70640)
prop_SPGZ      = c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23)
number_of_KPGZ/100*prop_KPGZ
5880/100*35/30
5880/100*35.30
number_of_KPGZ_Stand <- number_of_SPGZ/100*prop_SPGZ
df <- data_frame(period         = c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022'),
number_of_KPGZ = c(  5880,      6380,      6260,      6250,     6360,      6410,      6470),
prop_KPGZ      = c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71),
number_of_KPGZ_Stand <- number_of_KPGZ/100*prop_KPGZ,
number_of_SPGZ = c(99000,      96800,     91500,     89460,    88270,     72400,     70640),
prop_SPGZ      = c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23),
number_of_KPGZ_Stand <- number_of_SPGZ/100*prop_SPGZ
)
View(df)
df <- data_frame(period         = c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022'),
number_of_KPGZ = c(  5880,      6380,      6260,      6250,     6360,      6410,      6470),
prop_KPGZ      = c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71),
number_of_KPGZ_Stand = number_of_KPGZ/100*prop_KPGZ,
number_of_SPGZ = c(99000,      96800,     91500,     89460,    88270,     72400,     70640),
prop_SPGZ      = c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23),
number_of_KPGZ_Stand = number_of_SPGZ/100*prop_SPGZ
)
View(df)
View(df)
remove(list = ls())
df <- data_frame(period         = c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022'),
number_of_KPGZ = c(  5880,      6380,      6260,      6250,     6360,      6410,      6470),
prop_KPGZ      = c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71),
number_of_KPGZ_Stand = number_of_KPGZ/100*prop_KPGZ,
number_of_SPGZ = c(99000,      96800,     91500,     89460,    88270,     72400,     70640),
prop_SPGZ      = c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23),
number_of_KPGZ_Stand = number_of_SPGZ/100*prop_SPGZ
)
period         = c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022'
number_of_KPGZ = c(  5880,      6380,      6260,      6250,     6360,      6410,      6470)
prop_KPGZ      = c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71)
number_of_KPGZ_Stand <- number_of_KPGZ/100*prop_KPGZ
number_of_SPGZ = c(99000,      96800,     91500,     89460,    88270,     72400,     70640)
prop_SPGZ      = c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23)
number_of_KPGZ_Stand <- number_of_SPGZ/100*prop_SPGZ
df <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_KPGZ_Standm, prop_SPGZ)
period         = c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022'
number_of_KPGZ = c(  5880,      6380,      6260,      6250,     6360,      6410,      6470)
prop_KPGZ      = c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71)
number_of_KPGZ_Stand <- number_of_KPGZ/100*prop_KPGZ
number_of_SPGZ = c(99000,      96800,     91500,     89460,    88270,     72400,     70640)
prop_SPGZ      = c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23)
number_of_KPGZ_Stand <- number_of_SPGZ/100*prop_SPGZ
df <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_KPGZ_Standm, prop_SPGZ)
period         <-  c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022'
number_of_KPGZ <-  c(  5880,      6380,      6260,      6250,     6360,      6410,      6470)
prop_KPGZ      <-  c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71)
number_of_KPGZ_Stand <- number_of_KPGZ/100*prop_KPGZ
number_of_SPGZ <-  c(99000,      96800,     91500,     89460,    88270,     72400,     70640)
prop_SPGZ      <-  c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23)
number_of_KPGZ_Stand <- number_of_SPGZ/100*prop_SPGZ
period         <-  c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022')
number_of_KPGZ <-  c(  5880,      6380,      6260,      6250,     6360,      6410,      6470)
prop_KPGZ      <-  c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71)
number_of_KPGZ_Stand <- number_of_KPGZ/100*prop_KPGZ
number_of_SPGZ <-  c(99000,      96800,     91500,     89460,    88270,     72400,     70640)
prop_SPGZ      <-  c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23)
number_of_KPGZ_Stand <- number_of_SPGZ/100*prop_SPGZ
df <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_KPGZ_Standm, prop_SPGZ)
df <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_KPGZ_Standm, prop_SPGZ)
period         <-  c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022')
number_of_KPGZ <-  c(  5880,      6380,      6260,      6250,     6360,      6410,      6470)
prop_KPGZ      <-  c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71)
number_of_KPGZ_Stand <- number_of_KPGZ/100*prop_KPGZ
number_of_SPGZ <-  c(99000,      96800,     91500,     89460,    88270,     72400,     70640)
prop_SPGZ      <-  c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23)
number_of_KPGZ_Stand <- number_of_SPGZ/100*prop_SPGZ
df <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_KPGZ_Standm, prop_SPGZ)
df <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_KPGZ_Stand, prop_SPGZ)
period         <-  c('1kv2021', '2kv2021', '3kv2021', '4kv2021', '1v2022', '2kv2022', '3kv2022')
number_of_KPGZ <-  c(  5880,      6380,      6260,      6250,     6360,      6410,      6470)
prop_KPGZ      <-  c(  35.30,     41.70,     46.90,     48.49,    49.40,     51.16,     55.71)
number_of_KPGZ_Stand <- number_of_KPGZ/100*prop_KPGZ
number_of_SPGZ <-  c(99000,      96800,     91500,     89460,    88270,     72400,     70640)
prop_SPGZ      <-  c(21.00,       24.10,     27.00,     25.66,    26.42,     32.52,     36.23)
number_of_SPGZ_Stand <- number_of_SPGZ/100*prop_SPGZ
df <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_SPGZ_Stand, prop_SPGZ)
library('ggplot2')
View(df)
my_plot_1 <- ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram()
View(my_plot_1)
ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram()
ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram(bins = 30)
ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram(bins = 3)
ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram(bins = 10)
ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram(bins = 10, binwidth = 5)
ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram(bins = 10, binwidth = 25)
ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram(bins = 25, binwidth = 25)
ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram(bins = 25, binwidth = 25)
ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram(bins = 25, binwidth = 15)
ggplot(df, aes(x = number_of_KPGZ)) +
geom_histogram(bins = 55, binwidth = 15)
ggplot(df, aes(x = period, y = number_of_KPGZ)) +
geom_line()
ggplot(df, aes(x = period, y = number_of_KPGZ)) +
geom_abline()
ggplot(df, aes(x = period, y = number_of_KPGZ)) +
geom_count()
period         <-  c('20211kv1', '2021kv2', '2021kv3', '2021kv4', '2022kv1', '2022kv2', '2022kv3')
df <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_SPGZ_Stand, prop_SPGZ)
ggplot(df, aes(x = period, y = number_of_KPGZ)) +
geom_count()
df  <- mtcars
yt <- read.csv2("yt.csv")
### 1) hist
hist(df$mpg, breaks = 20, xlab = "MPG", main ="Histogram of MPG",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
### 2) boxplot
boxplot(df$mpg[df$am == "Auto"], df$mpg[df$am == "Manual"], ylab = "MPG", main ="MPG and AM",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
boxplot(mpg ~ am, df, ylab = "MPG", main ="MPG and AM",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
### 3) plot
plot(density(df$mpg), xlab = "MPG", main ="Density of MPG",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
plot(df$mpg, df$hp, xlab = "MPG", ylab ="HP" , main ="MPG and HP", pch = 22)
### 3) plot
plot(density(df$mpg), xlab = "MPG", main ="Density of MPG",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
df <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_SPGZ_Stand, prop_SPGZ)
ggplot(df, aes(x = period, y = number_of_KPGZ)) +
geom_density()
df  <- mtcars
yt <- read.csv2("yt.csv")
plot(~ duration + numb_ret_depir, yt)
plot(~ duration + numb_ret_depir, yt)
yt <- read.csv2("yt.csv")
plot(~ mpg + hp, df)
ggplot(df, aes(x = period, y = number_of_KPGZ)) +
geom_area()
plot(~ mpg + hp, df)
df <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_SPGZ_Stand, prop_SPGZ)
plot(~ period + number_of_KPGZ)
ggplot(df, aes(x = mpg))+
geom_histogram(fill = "white", col = "black", binwidth = 2)+
xlab("Miles/(US) gallon")+
ylab("Count")+
ggtitle("MPG histogram")
setwd("C:/Users/GudievZK/Desktop/GitHub/DF/")
setwd("/Users/zelimkhan/Desktop/Data/GitHub/DF/")
df  <- mtcars
yt <- read.csv2("yt.csv")
### 3) plot
plot(yt$time_depir, yt$numb_ret_depir)
ggplot(df, aes(x = mpg))+
geom_histogram(fill = "white", col = "black", binwidth = 2)+
xlab("Miles/(US) gallon")+
ylab("Count")+
ggtitle("MPG histogram")
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot()+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+
ggtitle("MPG dotplot")
ggplot(df, aes(x = mpg))+
geom_density(fill = "red")
ggplot(df, aes(x = mpg, fill = am))+
geom_density(alpha = 0.5)+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+
ggtitle("MPG density plot")
ggplot(df, aes(x = am, y = hp, fill = vs))+
geom_boxplot()+
xlab("Transmission type")+
ylab("Gross horsepower")+
scale_fill_discrete(name="Engine type")+
ggtitle("Gross horsepower and engine type")
ggplot(df, aes(x = mpg, y = hp, size = qsec))+
geom_point()+
xlab("Miles/(US) gallon")+
ylab("Gross horsepower")+
scale_size_continuous(name="1/4 mile time")+
ggtitle("Miles/(US) gallon and Gross horsepower")
df_e <- data_frame(period, number_of_KPGZ, number_of_KPGZ_Stand, prop_KPGZ,
number_of_SPGZ, number_of_SPGZ_Stand, prop_SPGZ)
ggplot(df_e, aes(x = period, y = number_of_KPGZ)) +
geom_point()
View(df_e)
df_e <- data_frame(period, number_of_KPGZ, round(number_of_KPGZ_Stand), prop_KPGZ,
number_of_SPGZ, round(number_of_SPGZ_Stand), prop_SPGZ)
View(df_e)
write.csv(df_e, file = "df_e")
write.csv(df_e, file = "df_e.csv")
write.csv2(df_e, file = "df_e.csv")
remove(list = ls())
Data <- read.csv("/Users/zelimkhan/Desktop/Data/GitHub/DF/iris_example.csv")
getwd
getwd
getwd
iris
getwd()
Data <- read.csv("/Users/zelimkhan/Desktop/Data/GitHub/DF/iris_example.csv")
df <- read.csv("/Users/zelimkhan/Desktop/Data/GitHub/DF/iris_example.csv")
getwd()
df <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DFiris_example.csv")
yt <- read.csv2("yt.csv")
df <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DFiris_example.csv")
df <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv")
remove(list = ls())
df <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv")
df
df <- read.csv2("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv")
df
df <- read.csv2("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv")
df
View(df)
df <- read.csv2("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv", sep = ",")
df
df <- read.csv2("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv", dec = ",")
df
df <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv", dec = ",")
df
View(df)
View(df)
remove(list = ls())
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv", dec = ",")
View(myData)
myData<-read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv", dec=",")
View(myData)
View(myData)
remove(list = ls())
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv", dec = ",")
head(myData)
View(myData)
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv", dec = ",", sep=",")
myData
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example.csv", sep=",")
myData
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example1.csv", sep=",", dec = ',')
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example1.csv", sep=",", dec = ",")
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example1.csv", dec = ",")
head(myData)
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example1.csv", dec = ",", row.names=FALSE)
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example1.csv", dec = ",", row.names=FALSE)
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example2.csv", dec = ",", row.names = FALSE)
myData <- read.csv("C:/Users/GudievZK/Desktop/GitHub/DF/iris_example1.csv", dec = ",", row.names = FALSE)
myData <- iris
myData
is.na(x)
is.na(myData)
sum(is.na(myData))
is.na(myData)
myData[!complete.cases(myData),]
library("psych")
# Примите решение, что, на ваш взгляд, целесообразно в данном случае сделать с пропущенными значениями.
# В частности, подставьте вместо отсутствующих значений среднее с помощью функции na.aggregate
library(zoo)
sum(is.na(myData))
View(myData)
winsor()
# Кратко ответьте на следующие вопросы.
#  1)	Что является элементарной единицей в этом наборе данных?
#  2)	Определите вид данных: одномерные, двумерные, многомерные?
#  3)	Определите какие из этих переменных количественные, а какие качественные?
str(myData)
dim(myData)
names(myData)
names(myData)
# Проверьте структуру данных. В частности, количественные переменные должны иметь атрибут «числовая», качественные – «factor», а также являются ли данные таблицей или фреймом.
str(myData)
attributes(myData)
# Рассчитайте винзорированную (триммированную) среднюю по каждой переменной и сопоставьте это значение с исходным средним и медианным значением. Сделайте выводы.
winsor(x1, trim = 0.2, na.rm = TRUE)
# Рассчитайте винзорированную (триммированную) среднюю по каждой переменной и сопоставьте это значение с исходным средним и медианным значением. Сделайте выводы.
winsor(myData$SEPALLEN, trim = 0.2, na.rm = TRUE)
# Рассчитайте винзорированную (триммированную) среднюю по каждой переменной и сопоставьте это значение с исходным средним и медианным значением. Сделайте выводы.
winsor(myData$SEPALLEN, trim = 0.2, na.rm = TRUE)
# Рассчитайте винзорированную (триммированную) среднюю по каждой переменной и сопоставьте это значение с исходным средним и медианным значением. Сделайте выводы.
winsor(myData$Sepal.Length, trim = 0.2, na.rm = TRUE)
x1 <- myData[, 1]
x1
boxplot.stats(x1)$out
boxplot(x1)
is.na(myData)
sum(is.na(myData))
myData[!complete.cases(myData),]
myData[c(1, 3, 51), c(2, 4, 5)] <- NA
is.na(myData)
sum(is.na(myData))
myData[!complete.cases(myData),]
sum(is.na(myData))
is.na(myData)
myData[is.na() == T]
myData[is.na() == T, is.na() == T]
myData[!complete.cases(myData),]
View(myData)
#  3)	Определите какие из этих переменных количественные, а какие качественные?
str(myData)
library(dplyr)
select_if(myData, is.numeric)
colnames(select_if(myData, is.numeric))
# Кратко ответьте на следующие вопросы.
#  1)	Что является элементарной единицей в этом наборе данных?
# Ответ: один цветок
#  2)	Определите вид данных: одномерные, двумерные, многомерные?
dim(myData)
na.aggregate(myData)
myData[] <- lapply(myData, na.aggregate)
myData
sum(is.na(myData))
sum(is.na(myData))
myData <- iris
head(myData)
#### 1.3 Проверьте, есть ли наблюдения, в которых значения по какому-либо параметру отсутствуют, и выведите список этих значений. ####
is.na(myData)
sum(is.na(myData)) # NA отсутствуют
myData[c(1, 3, 51), c(2, 4, 5)] <- NA # заменим некоторые данные на NA
is.na(myData)
sum(is.na(myData)) # 9 NA
myData[] <- lapply(myData, na.aggregate)
sum(is.na(myData))
myData
myData[!complete.cases(myData),] # gропуски имеются на пересечении строк 1, 3 и 51 и столбцов Sepal.Width Petal, Petal.Width, Species
is.na(myData)
sum(is.na(myData)) # 9 NA
myData[!complete.cases(myData),] # gропуски имеются на пересечении строк 1, 3 и 51 и столбцов Sepal.Width Petal, Petal.Width, Species
myData[] <- lapply(myData, na.aggregate)
myData <- iris
myData[c(1, 3, 51), c(2, 4)] <- NA # заменим некоторые данные на NA
is.na(myData)
sum(is.na(myData)) # 9 NA
myData[!complete.cases(myData),] # gропуски имеются на пересечении строк 1, 3 и 51 и столбцов Sepal.Width Petal, Petal.Width, Species
sum(is.na(myData)) # 9 NA
myData[] <- lapply(myData, na.aggregate)
sum(is.na(myData))
# Ответ: двумерные данные.
#  3)	Определите какие из этих переменных количественные, а какие качественные?
str(myData)
colnames(select_if(myData, is.factor()))
colnames(select_if(myData, is.factor))
colnames(select_if(myData, is.numeric)) #
# Проверьте количество наблюдений и переменных.
dim(myData)
# Проверьте названия переменных.
names(myData) #
# Проверьте структуру данных. В частности, количественные переменные должны иметь атрибут «числовая»,
# качественные – «factor», а также являются ли данные таблицей или фреймом.
str(myData) #
typeof(myData)
class(myData) # "list
attributes(myData)
# Рассчитайте описательные статистики.
summary(myData)
# Рассчитайте винзорированную (триммированную) среднюю по каждой переменной и сопоставьте это значение с исходным средним и медианным значением. Сделайте выводы.
winsor(myData$Sepal.Length, trim = 0.2, na.rm = TRUE)
# Рассчитайте винзорированную (триммированную) среднюю по каждой переменной и сопоставьте это значение с исходным средним и медианным значением. Сделайте выводы.
winsor(select_if(myData, is.numeric()), trim = 0.2, na.rm = TRUE)
# Рассчитайте винзорированную (триммированную) среднюю по каждой переменной и сопоставьте это значение с исходным средним и медианным значением. Сделайте выводы.
winsor(select_if(myData, is.numeric()), trim = 0.2, na.rm = TRUE)
# Рассчитайте винзорированную (триммированную) среднюю по каждой переменной и сопоставьте это значение с исходным средним и медианным значением. Сделайте выводы.
select_if(myData, is.numeric()
winsor(), trim = 0.2, na.rm = TRUE)
# Рассчитайте винзорированную (триммированную) среднюю по каждой переменной и сопоставьте это значение с исходным средним и медианным значением. Сделайте выводы.
select_if(myData, is.numeric)
winsor(select_if(myData, is.numeric), trim = 0.2, na.rm = TRUE)
myData
winsor(select_if(myData, is.numeric), trim = 0.2, na.rm = TRUE) == select_if(myData, is.numeric)
winsor(myData$Sepal.Length, trim = 0.2, na.rm = TRUE)
winsor(myData$Sepal.Length, trim = 0.2, na.rm = TRUE)
winsor(myData$Sepal.Length, trim = 0.2, na.rm = TRUE)
winsor.mean(myData$Sepal.Length, trim = 0.2, na.rm = TRUE)
winsor.mean(select_if(myData, is.numeric), trim = 0.2, na.rm = TRUE)
myData_NA [c(1, 3, 51), c(2, 4)] <- NA # заменим некоторые данные на NA
is.na(myData)
myData_NA <- myData[c(1, 3, 51), c(2, 4)] <- NA # заменим некоторые данные на NA
myData[] <- lapply(myData_NA, na.aggregate)
sum(is.na(myData)) # 0 NA
remove(list = ls())
myData <- iris
is.na(myData)
sum(is.na(myData)) # NA отсутствуют
myData_NA <- myData[c(1, 3, 51), c(2, 4)] <- NA # заменим некоторые данные на NA
remove(list = ls())
myData[c(1, 3, 51), c(2, 4)] <- NA # заменим некоторые данные на NA
myData[!complete.cases(myData),] # gропуски имеются на пересечении строк 1, 3 и 51 и столбцов Sepal.Width Petal, Petal.Width
myData <- iris
head(myData)
sum(is.na(myData)) # NA отсутствуют
myData[c(1, 3, 51), c(2, 4)] <- NA # заменим некоторые данные на NA
is.na(myData)
sum(is.na(myData)) # 6 NA
myData[!complete.cases(myData),] # gропуски имеются на пересечении строк 1, 3 и 51 и столбцов Sepal.Width Petal, Petal.Width
sum(is.na(myData)) # 0 NA
# Ответ: двумерные данные.
#  3)	Определите какие из этих переменных количественные, а какие качественные?
str(myData)
winsor.mean(select_if(myData, is.numeric), trim = 0.2, na.rm = TRUE)
myDataNA <- myData
myDataNA <- myData # сохраним дата фрейм с пропусками, т.к. мы его использовать вместо исходного файла
attributes(myData)
