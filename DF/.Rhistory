my_var1 <- 42
my_var2 <- 35.25
my_var1 + 100
my_var1
my_var1 + my_var2 - 12
my_var3 <- my_var1^2 + my_var2^2
my_var3 > 200
my_var3 > 30099
my_var1 == my_var2
my_var1 != my_var2
my_new_var <- my_var1 == my_var2
1 : 67
my_vector1 <- 1:67
my_vector2 <- c(-32, 45, 67, 12.78, 129, 0, -65)
my_vector1[1]
my_vector1[3]
my_vector2[2]
my_vector2[c(1,2,3)]
1:3
my_vector2[1:3]
my_vector2[c(1,5,6,7,10)]
my_vector1 + 10
my_vector2 + 56
my_vector2 == 0
my_vector1 > 30
x <- 23
my_vector1 > 23
my_vector1 > x
x == 23
my_vector2 > 0
my_vector2[my_vector2 > 0]
my_vector2[my_vector2 < 0]
my_vector2[my_vector2 == 0]
my_vector1[my_vector1 > 20 & my_vector1 < 30]
positive_numbers <- my_vector2[my_vector2 > 0]
my_vector2
positive_numbers
v1 <-  c(165, 178, 180, 181, 167, 178, 187, 167, 187)
mean_v1 <- mean(v1)
mean_v1
v1[v1 > mean_v1]
greater_than_mean <- v1[v1 > mean_v1]
greater_than_mean
age <- c(16, 18, 22, 27)
is_maried <- c(F, F, T, T)
name <- c("Olga", "Maria", "Nastya", "Polina")
data <- list(age, is_maried, name)
View(data)
data
View(data)
data[[1]][1]
View(data)
data[[2]][3]
df <- data.frame(Name = name, Age = age, Status = is_maried)
View(df)
head(df)
typeof(df)
mydata <- read.csv('evals.csv')
source("~/Desktop/Data/GitHub/1.3_my_script.R")
source("~/Desktop/Data/GitHub/1.3_my_script.R")
install.packages("dplyr")
library(dplyr)
install.packages("psych")
library(psych)
install.packages("ggplot2")
library(ggplot2)
getwd()
setwd("/Users/zelimkhan/Desktop/Data/GitHub/DF/")
df  <- mtcars
yt <- read.csv2("yt.csv")
yt <- read.csv2("yt.csv")
yt <- read.csv2("yt.csv")
yt <- read.csv2("yt.csv")
yt <- read.csv2("yt.csv")
yt <- read.csv2("yt.csv")
yt <- read.csv("yt.csv")
yt <- read.csv2("yt.csv")
yt <- read.csv2("yt.csv")
yt <- read.csv2("yt.csv")
?as.factor()
# Чтобы корректно открыть в RStudio файл csv (без закорючек) необходимо:
# 1.	Для ОС Windows – при сохранении установить тип файла «CSV (разделитель -запятая)»
# 2.	Для ОС Mac – при сохранении установить тип файла «CSV UTF-8 (разделитель -запятая)»
str(yt)
class(yt$reason) = 'factor'
c(yt$reason) <- factor()
c(yt$reason, yt$kind_tz) <- factor()
yt$reason <- factor()
yt$reason <- factor(yt$reason)
yt_f_names <- c(reason, year_plan_st, kvartal, stage, executor_ac, teamleader, deputy, contract, pcp, criteria, f2, method, tegs)
yt_f_names <- c(yt$reason, year_plan_st, kvartal, stage, executor_ac, teamleader, deputy, contract, pcp, criteria, f2, method, tegs)
yt_f_names <- c(yt$reason, yt$year_plan_st, yt$kvartal, yt$stage, yt$executor_ac, yt$teamleader, yt$deputy, yt$contract,
yt$pcp, yt$criteria, yt$f2, yt$method, yt$tegs)
yt[, yt_f_names] <- lapply(yt[yt_f_names], factor)
# Чтобы корректно открыть в RStudio файл csv (без закорючек) необходимо:
# 1.	Для ОС Windows – при сохранении установить тип файла «CSV (разделитель -запятая)»
# 2.	Для ОС Mac – при сохранении установить тип файла «CSV UTF-8 (разделитель -запятая)»
str(yt)
yt[, yt_f_names] <- lapply(yt[yt_f_names], factor)
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
yt_f_names
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
yt_f_names <- c('reason', 'year_plan_st', 'kvartal', 'stage', 'executor_ac', 'teamleader', 'deputy', 'contract',
'pcp', 'criteria', 'f2', 'method', 'tegs')
yt[, yt_f_names] <- lapply(yt[, yt_f_names], factor)
# Чтобы корректно открыть в RStudio файл csv (без закорючек) необходимо:
# 1.	Для ОС Windows – при сохранении установить тип файла «CSV (разделитель -запятая)»
# 2.	Для ОС Mac – при сохранении установить тип файла «CSV UTF-8 (разделитель -запятая)»
str(yt)
df$vs  <- factor(df$vs  , labels = c("V", "S"))
df$am  <- factor(df$am  , labels = c("Auto", "Manual"))
### 1) hist
hist(df$mpg, breaks = 20, xlab = "MPG", main ="Histogram of MPG",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
### 2) boxplot
boxplot(df$mpg[df$am == "Auto"], df$mpg[df$am == "Manual"], ylab = "MPG", main ="MPG and AM",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
### 2) boxplot
boxplot(df$mpg[df$am == "Auto"], df$mpg[df$am == "Manual"], ylab = "MPG", main ="MPG and AM",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
boxplot(mpg ~ am, df, ylab = "MPG", main ="MPG and AM",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
### 3) plot
plot(density(df$mpg), xlab = "MPG", main ="Density of MPG",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
### 3) plot
plot(density(df$mpg), xlab = "MPG", main ="Density of MPG",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
plot(df$mpg, df$hp, xlab = "MPG", ylab ="HP" , main ="MPG and HP", pch = 22)
plot(~ mpg + hp, df)
plot(df$mpg, df$hp, xlab = "MPG", ylab ="HP" , main ="MPG and HP", pch = 22)
plot(~ mpg + hp, df)
### 1) hist
hist(yt$duration)
hist(yt$duration, breaks = 20)
hist(yt$numb_ret_depir, breaks = 20)
hist(yt$numb_ret_oiv, breaks = 5)
### 2) boxplot
boxplot(duration ~ deputy, yt, ylab = 'Длительность, раб.дн.', xlab = 'Заместитель РПО', main = "Длительность разработки",
col = 'green', cex.lab = 1.3, cex.axis = 1.3)
table(yt$deputy)
### 3) plot
plot(yt$time_depir, yt$numb_ret_depir)
plot(density(yt$duration), xlab = "Длительность", main ="Density of Длительность",
col = "green", cex.lab = 1.3, cex.axis = 1.3)
plot(yt$duration, yt$numb_ret_depir, xlab = "Длительность", ylab = "Количество возвратов от ДЭПиР",
main = "Взаимосвязсь между длительностью и количеством возвратов от ДЭПиР", pch = 20)
cor.test(yt$duration, yt$numb_ret_depir)
cor.test(yt$time_depir, yt$numb_ret_depir)
cor.test(yt$duration, yt$numb_ret_oiv)
plot(yt$duration, yt$numb_ret_oiv, xlab = "Длительность", ylab = "Количество возвратов от ОИВ",
main = "Взаимосвязсь между длительностью и количеством возвратов от ОИВ", pch = 20)
cor.test(yt$duration, yt$numb_ret_oiv)
plot(~ duration + numb_ret_depir, yt)
ggplot(df, aes(x = mpg))+
geom_histogram(fill = "white", col = "black", binwidth = 2)+
xlab("Miles/(US) gallon")+
ylab("Count")+
ggtitle("MPG histogram")
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot()+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+
ggtitle("MPG dotplot")
ggplot(df, aes(x = mpg))+
geom_density(fill = "red")
ggplot(df, aes(x = mpg, fill = am))+
geom_density(alpha = 0.5)+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+
ggtitle("MPG density plot")
ggplot(df, aes(x = am, y = hp, fill = vs))+
geom_boxplot()+
xlab("Transmission type")+
ylab("Gross horsepower")+
scale_fill_discrete(name="Engine type")+
ggtitle("Gross horsepower and engine type")
ggplot(df, aes(x = mpg, y = hp, size = qsec))+
geom_point()+
xlab("Miles/(US) gallon")+
ylab("Gross horsepower")+
scale_size_continuous(name="1/4 mile time")+
ggtitle("Miles/(US) gallon and Gross horsepower")
ggplot(df, aes(x = mpg, y = hp, size = qsec))+
geom_point()+
xlab("Miles/(US) gallon")+
ylab("Gross horsepower")+
scale_size_continuous(name="1/4 mile time")+
ggtitle("Miles/(US) gallon and Gross horsepower")
my_plot  <- ggplot(df, aes(x = mpg, y = hp, col = vs, size = qsec))+
geom_point()
my_plot2  <- ggplot(df, aes(x = am, y = hp, fill = vs))
my_plot2 + geom_boxplot()
my_plot  <- ggplot(df, aes(x = mpg, y = hp, col = vs, size = qsec))+
geom_point()
my_plot
my_plot2  <- ggplot(df, aes(x = am, y = hp, fill = vs))
my_plot2
my_plot2 + geom_boxplot()
ggplot(yt, aes(x = duration)) +
geom_histogram(fill = "white", col = "black", binwidth = 20) +
xlab("Длительность утверждения КТД, раб. дни") +
ylab("Количество КТД") +
ggtitle("Гистограмма утверждения КТД")
ggplot(yt, aes(x = duration)) +
geom_histogram(fill = "white", col = "black", binwidth = 20) +
xlab("Длительность утверждения КТД, раб. дни") +
ylab("Количество КТД") +
ggtitle("Гистограмма длительности утверждения КТД")
ggplot(yt, aes(x = duration, fill = kind_tz)) +
geom_dotplot(binwidth = 15)+
xlab("Длительность") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Гистограмма длительности")
ggplot(yt, aes(x = duration, fill = kind_tz)) +
geom_histogram(binwidth = 15)+
xlab("Длительность") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Гистограмма длительности")
geom_dotplot
ggplot(yt, aes(x = duration, fill = kind_tz)) +
geom_dotplot(binwidth = 15)+
xlab("Длительность") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Гистограмма длительности")
ggplot(yt, aes(x = duration, fill = kind_tz)) +
geom_density(alpha = 0.5) +
xlab("Длительность") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Гистограмма длительности")
ggplot(yt, aes(x = numb_ret_oiv)) +
geom_density(fill = "red")
ggplot(yt, aes(x = numb_ret_oiv[yt$kind_tz = "СТЗ"])) +
geom_density(fill = "red")
ggplot(yt, aes(x = numb_ret_oiv)) +
geom_density(fill = "red")
ggplot(yt, aes(x = numb_ret_depir, fill = kind_tz)) +
geom_density(alpha = 0.5) +
xlab("Количестово возвратов от ДЭПиР") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Количество возрвратов от ДЭПиР")
ggplot(yt, aes(x = duration, fill = kind_tz)) +
geom_dotplot(binwidth = 15)+
xlab("Длительность") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Гистограмма длительности")
ggplot(yt, aes(x = duration)) +
geom_histogram(fill = "white", col = "black", binwidth = 20) +
xlab("Длительность утверждения КТД, раб. дни") +
ylab("Количество КТД") +
ggtitle("Гистограмма длительности утверждения КТД")
### 3) plot
plot(yt$time_depir, yt$numb_ret_depir)
### 3) plot
plot(yt$time_depir, yt$numb_ret_depir, fill = kind_tz)
### 3) plot
plot(yt$time_depir, yt$numb_ret_depir, fill = 'kind_tz')
ggplot(yt, aes(x = duration)) +
geom_point()
ggplot(yt, aes(x = duration)) +
geom_point()
ggplot(yt, aes(x = duration, fill = kind_tz)) +
geom_point()
ggplot(yt, aes(x = duration)) +
geom_density()
ggplot(yt, aes(x = duration)) +
geom_point()
ggplot(yt, aes(x = duration, y = num_ret_depir)) +
geom_point()
ggplot(yt, aes(x = duration, y = numb_ret_depir)) +
geom_point()
ggplot(yt, aes(x = duration, y = numb_ret_depir, fill = kind_tz)) +
geom_point()
ggplot(yt, aes(x = duration, y = numb_ret_depir, fill = kind_tz, size = numb_ret_oiv)) +
geom_point()
ggplot(yt, aes(x = duration, y = numb_ret_depir, fill = kind_tz, size = numb_ret_oiv)) +
geom_point()
ggplot(yt, aes(x = numb_ret_depir, fill = kind_tz)) +
geom_density(alpha = 0.5) +
xlab("Количестово возвратов от ДЭПиР") +
ylab("Количество КТД")+
scale_fill_discrete("Вид ТЗ") +
ggtitle("Количество возрвратов от ДЭПиР")
ggplot(yt, aes(x = duration, y = numb_ret_depir, fill = 'kind_tz', size = numb_ret_oiv)) +
geom_point()
ggplot(yt, aes(x = duration, y = numb_ret_depir, fill = kind_tz, size = numb_ret_oiv)) +
geom_point()
ggplot(yt, aes(x = duration, y = numb_ret_depir, col = kind_tz, size = numb_ret_oiv)) +
geom_point()
airquality
ggplot(airquality, aes(x = Month, y = Ozone)) +
geom_boxplot()
str(airquality)
airquality$Month <- factor(airquality$Month)
str(airquality)
ggplot(airquality, aes(x = Month, y = Ozone)) +
geom_boxplot()
# 2
data(airquality)
df_airqu <- airquality
df_airqu
View(df_airqu)
View(airquality)
rm(df_airqu)
# 2
boxplot (Ozone ~ Month, airquality)
ggplot(airquality, aes(x = Month, y = kind_tz)) +
geom_boxplot()
ggplot(yt, aes(x = Month, y = kind_tz)) +
geom_boxplot()
ggplot(yt, aes(x = duration, y = kind_tz)) +
geom_boxplot()
ggplot(yt, aes(x = kind_tz, y = duration)) +
geom_boxplot()
# 3
ggplot(na.exclude(airquality), aes(x = as.factor(Month), y = Ozone))+
geom_boxplot(fill = "red", alpha = 0.5)+
xlab("Month")
na.exclude(airquality)
mtcars
ggplot(mtcars, x = mpg, y = disp, col = hp)
ggplot(mtcars, x = mpg, y = disp, col = hp) +
geom_point()
ggplot(mtcars, aes(x = mpg, y = disp, col = hp)) +
geom_point()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length, col = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length, fill = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length, col = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length, fill = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = 'Species')
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length, col = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length, fill = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length, fill = Species)) + geom_histogram()
# Студент Ярослав очень любит строить графики в R. Основываясь на данных iris он хочет построить следующий график:
# Scatterplot (диаграмма рассеивания), где по оси X будет отложена переменная Sepal.Length,  по оси Y переменная
# Sepal.Width. За цвет точек будет отвечать переменная  Species, а за размер точек переменная Petal.Length.
# Ярослав написал следующую команду
ggplot(aes(Sepal.Length, Sepal.Width, col = Species)) +
geom_point(iris, size = Petal.Length)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col = Species, size = Petal.Length)) +
geom_point()
ggplot(iris, aes(Sepal.Length, Sepal.Width, col = Species, size = Petal.Length)) +
geom_point()
ggplot(iris, aes(Sepal.Length, Sepal.Width, col = Species)) +
geom_point(size = Petal.Length)
ggplot(iris, aes(Sepal.Length, Sepal.Width, col = Species)) +
geom_point(iris, size = Petal.Length)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, fill = Species, size = Petal.Length)) +
geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col = Species, size = Petal.Length)) +
geom_point()
